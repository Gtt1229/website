(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{584:function(t,e,r){"use strict";r.r(e);var a=r(42),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"metricschecker-hpp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#metricschecker-hpp"}},[t._v("#")]),t._v(" MetricsChecker.hpp"),r("seo")],1),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/network/monitor/MetricsChecker.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/network/monitor/MetricsChecker.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("code",[t._v("API: latest")]),r("br"),t._v(" "),r("code",[t._v("module: oatpp")]),r("br"),t._v(" "),r("code",[t._v('#include "oatpp/network/monitor/MetricsChecker.hpp"')])]),t._v(" "),r("h2",{attrs:{id:"metricschecker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#metricschecker"}},[t._v("#")]),t._v(" MetricsChecker")]),t._v(" "),r("p",[t._v("MetricsChecker checks "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/monitor/StatCollector/#connectionstats"}},[t._v("oatpp::network::monitor::ConnectionStats")]),t._v(" if those are satisfy the rule.")],1),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" network "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" monitor "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MetricsChecker")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("base"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Countable "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h3",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Return Type")]),t._v(" "),r("th",[t._v("Name")]),t._v(" "),r("th",[t._v("Summary")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[r("code",[t._v("[none]")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#metricschecker-~metricschecker"}},[t._v("~MetricsChecker")])]),t._v(" "),r("td",[t._v("Default virtual destructor.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("std::vector<oatpp::String>")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#metricschecker-getmetricslist"}},[t._v("getMetricsList")])]),t._v(" "),r("td",[t._v("Get list of metrics names that are checked by this MetricsChecker.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("std::shared_ptr<StatCollector>")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#metricschecker-createstatcollector"}},[t._v("createStatCollector")])]),t._v(" "),r("td",[t._v("Create "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/monitor/StatCollector/#statcollector"}},[t._v("oatpp::network::monitor::StatCollector")]),t._v(" for given "),r("code",[t._v("metricName")]),t._v(".")],1)]),t._v(" "),r("tr",[r("td",[r("code",[t._v("bool")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#metricschecker-check"}},[t._v("check")])]),t._v(" "),r("td",[t._v("Called by "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/monitor/ConnectionMonitor/#connectionmonitor"}},[t._v("oatpp::network::monitor::ConnectionMonitor")]),t._v(" on each")],1)])])]),t._v(" "),r("h3",{attrs:{id:"metricschecker-metricschecker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#metricschecker-metricschecker"}},[t._v("#")]),t._v(" MetricsChecker::~MetricsChecker")]),t._v(" "),r("p",[t._v("Default virtual destructor.")]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("MetricsChecker")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),r("h3",{attrs:{id:"metricschecker-getmetricslist"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#metricschecker-getmetricslist"}},[t._v("#")]),t._v(" MetricsChecker::getMetricsList")]),t._v(" "),r("p",[t._v("Get list of metrics names that are checked by this MetricsChecker. "),r("ul",[r("li",[r("strong",[t._v("@return")])])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("vector"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMetricsList")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),r("h3",{attrs:{id:"metricschecker-createstatcollector"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#metricschecker-createstatcollector"}},[t._v("#")]),t._v(" MetricsChecker::createStatCollector")]),t._v(" "),r("p",[t._v("Create "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/monitor/StatCollector/#statcollector"}},[t._v("oatpp::network::monitor::StatCollector")]),t._v(" for given "),r("code",[t._v("metricName")]),t._v(". This method will be called by "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/monitor/ConnectionMonitor/#connectionmonitor"}},[t._v("oatpp::network::monitor::ConnectionMonitor")]),t._v(" only if there is no such "),r("code",[t._v("StatCollector")]),t._v(" registered in the "),r("code",[t._v("ConnectionMonitor")]),t._v(" yet. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" metricName - name of the metric. ")]),r("li",[r("strong",[t._v("@return")]),t._v(" - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/monitor/StatCollector/#statcollector"}},[t._v("oatpp::network::monitor::StatCollector")]),t._v(". ")],1)])],1),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("StatCollector"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStatCollector")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" metricName"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),r("h3",{attrs:{id:"metricschecker-check"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#metricschecker-check"}},[t._v("#")]),t._v(" MetricsChecker::check")]),t._v(" "),r("p",[t._v("Called by "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/monitor/ConnectionMonitor/#connectionmonitor"}},[t._v("oatpp::network::monitor::ConnectionMonitor")]),t._v(" on each time interval to check if connection satisfies the rule. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" stats - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/monitor/StatCollector/#connectionstats"}},[t._v("oatpp::network::monitor::ConnectionStats")]),t._v(". ")],1),r("li",[r("strong",[t._v("@param")]),t._v(" currMicroTime - current time microseconds. ")]),r("li",[r("strong",[t._v("@return")]),t._v(" - "),r("code",[t._v("true")]),t._v(" if connection satisfies the rule. "),r("code",[t._v("false")]),t._v(" if connection should be closed. ")])])],1),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ConnectionStats"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" stats"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_int64 currMicroTime"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);