(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{514:function(t,s,a){"use strict";a.r(s);var r=a(42),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"processor-hpp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-hpp"}},[t._v("#")]),t._v(" Processor.hpp"),a("seo")],1),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/core/async/Processor.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/core/async/Processor.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("API: latest")]),a("br"),t._v(" "),a("code",[t._v("module: oatpp")]),a("br"),t._v(" "),a("code",[t._v('#include "oatpp/core/async/Processor.hpp"')])]),t._v(" "),a("h2",{attrs:{id:"processor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor"}},[t._v("#")]),t._v(" Processor")]),t._v(" "),a("p",[t._v("Asynchronous Processor."),a("br"),t._v(" Responsible for processing and managing multiple Coroutines. Do not use bare processor to run coroutines. Use "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Executor/#executor"}},[t._v("oatpp::async::Executor")]),t._v(" instead;.")],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" async "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Processor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Return Type")]),t._v(" "),a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Summary")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#processor-addworker"}},[t._v("addWorker")])]),t._v(" "),a("td",[t._v("Add dedicated co-worker to processor.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#processor-pushonetask"}},[t._v("pushOneTask")])]),t._v(" "),a("td",[t._v("Push one Coroutine back to processor.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#processor-pushtasks"}},[t._v("pushTasks")])]),t._v(" "),a("td",[t._v("Push list of Coroutines back to processor.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#processor-execute"}},[t._v("execute")])]),t._v(" "),a("td",[t._v("Execute Coroutine.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#processor-waitfortasks"}},[t._v("waitForTasks")])]),t._v(" "),a("td",[t._v("Sleep and wait for tasks.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bool")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#processor-iterate"}},[t._v("iterate")])]),t._v(" "),a("td",[t._v("Iterate Coroutines.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#processor-stop"}},[t._v("stop")])]),t._v(" "),a("td",[t._v("Stop waiting for new tasks.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("v_int32")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#processor-gettaskscount"}},[t._v("getTasksCount")])]),t._v(" "),a("td",[t._v("Get number of all not-finished tasks including tasks rescheduled for processor's co-workers.")])])])]),t._v(" "),a("h3",{attrs:{id:"processor-addworker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-addworker"}},[t._v("#")]),t._v(" Processor::addWorker")]),t._v(" "),a("p",[t._v("Add dedicated co-worker to processor. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" worker - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/worker/Worker/#worker"}},[t._v("oatpp::async::worker::Worker")]),t._v(". ")],1)])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addWorker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("worker"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Worker"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" worker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"processor-pushonetask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-pushonetask"}},[t._v("#")]),t._v(" Processor::pushOneTask")]),t._v(" "),a("p",[t._v("Push one Coroutine back to processor. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" coroutine - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#coroutinehandle"}},[t._v("oatpp::async::CoroutineHandle")]),t._v(" previously popped-out(rescheduled to coworker) from this processor. ")],1)])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushOneTask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CoroutineHandle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" coroutine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"processor-pushtasks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-pushtasks"}},[t._v("#")]),t._v(" Processor::pushTasks")]),t._v(" "),a("p",[t._v("Push list of Coroutines back to processor. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" tasks - oatpp::collection::FastQueue of "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#coroutinehandle"}},[t._v("oatpp::async::CoroutineHandle")]),t._v(" previously popped-out(rescheduled to coworker) from this processor. ")],1)])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pushTasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("collection"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("FastQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("CoroutineHandle"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" tasks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"processor-execute"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-execute"}},[t._v("#")]),t._v(" Processor::execute")]),t._v(" "),a("p",[t._v("Execute Coroutine. "),a("ul",[a("li",[a("strong",[t._v("@tparam")]),t._v(" CoroutineType - type of coroutine to execute. ")]),a("li",[a("strong",[t._v("@tparam")]),t._v(" Args - types of arguments to be passed to Coroutine constructor. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" params - actual arguments to be passed to Coroutine constructor. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" CoroutineType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" Args"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"processor-waitfortasks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-waitfortasks"}},[t._v("#")]),t._v(" Processor::waitForTasks")]),t._v(" "),a("p",[t._v("Sleep and wait for tasks.")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("waitForTasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"processor-iterate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-iterate"}},[t._v("#")]),t._v(" Processor::iterate")]),t._v(" "),a("p",[t._v("Iterate Coroutines. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" numIterations - number of iterations. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("code",[t._v("true")]),t._v(" if there are active Coroutines. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_int32 numIterations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"processor-stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-stop"}},[t._v("#")]),t._v(" Processor::stop")]),t._v(" "),a("p",[t._v("Stop waiting for new tasks.")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"processor-gettaskscount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-gettaskscount"}},[t._v("#")]),t._v(" Processor::getTasksCount")]),t._v(" "),a("p",[t._v("Get number of all not-finished tasks including tasks rescheduled for processor's co-workers. "),a("ul",[a("li",[a("strong",[t._v("@return")]),t._v(" - number of not-finished tasks. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTasksCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);