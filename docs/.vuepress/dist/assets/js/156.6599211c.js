(window.webpackJsonp=window.webpackJsonp||[]).push([[156],{528:function(t,a,e){"use strict";e.r(a);var r=e(42),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"fifobuffer-hpp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-hpp"}},[t._v("#")]),t._v(" FIFOBuffer.hpp"),e("seo")],1),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/core/data/buffer/FIFOBuffer.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/core/data/buffer/FIFOBuffer.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("code",[t._v("API: latest")]),e("br"),t._v(" "),e("code",[t._v("module: oatpp")]),e("br"),t._v(" "),e("code",[t._v('#include "oatpp/core/data/buffer/FIFOBuffer.hpp"')])]),t._v(" "),e("h2",{attrs:{id:"fifobuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer"}},[t._v("#")]),t._v(" FIFOBuffer")]),t._v(" "),e("p",[t._v("FIFO operations over the buffer !FIFOBuffer is NOT an IOStream despite having similar APIs!")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" data "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" buffer "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FIFOBuffer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Return Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("[none]")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-fifobuffer"}},[t._v("FIFOBuffer")])]),t._v(" "),e("td",[t._v("Constructor.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-setbufferposition"}},[t._v("setBufferPosition")])]),t._v(" "),e("td",[t._v("Set read and write positions in buffer.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-availabletoread"}},[t._v("availableToRead")])]),t._v(" "),e("td",[t._v("Amount of bytes currently available to read from buffer.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-availabletowrite"}},[t._v("availableToWrite")])]),t._v(" "),e("td",[t._v("Amount of buffer space currently available for data writes.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_buff_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-getbuffersize"}},[t._v("getBufferSize")])]),t._v(" "),e("td",[t._v("Get FIFOBuffer size.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-read"}},[t._v("read")])]),t._v(" "),e("td",[t._v("read up to count bytes from the buffer to data")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-peek"}},[t._v("peek")])]),t._v(" "),e("td",[t._v("Peek up to count of bytes int he buffer")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-commitreadoffset"}},[t._v("commitReadOffset")])]),t._v(" "),e("td",[t._v("Commit read offset")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-write"}},[t._v("write")])]),t._v(" "),e("td",[t._v("write up to count bytes from data to buffer")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-readandwritetostream"}},[t._v("readAndWriteToStream")])]),t._v(" "),e("td",[t._v("call read and then write bytes read to output stream")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-readfromstreamandwrite"}},[t._v("readFromStreamAndWrite")])]),t._v(" "),e("td",[t._v("call stream.read() and then write bytes read to buffer")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-flushtostream"}},[t._v("flushToStream")])]),t._v(" "),e("td",[t._v("flush all availableToRead bytes to stream")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("async::CoroutineStarter")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#fifobuffer-flushtostreamasync"}},[t._v("flushToStreamAsync")])]),t._v(" "),e("td",[t._v("flush all availableToRead bytes to stream in asynchronous manner")])])])]),t._v(" "),e("h3",{attrs:{id:"fifobuffer-fifobuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-fifobuffer"}},[t._v("#")]),t._v(" FIFOBuffer::FIFOBuffer")]),t._v(" "),e("p",[t._v("Constructor. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" buffer - pointer to buffer used for reads/writes. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" bufferSize - buffer size. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" readPosition - initial read position in buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" writePosition - initial write position in buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" canRead - flag to resolve ambiguity when readPosition == writePosition. If(readPosition == writePosition  canRead) then "),e("a",{attrs:{href:"#fifobuffer-availabletoread"}},[t._v("FIFOBuffer::availableToRead()")]),t._v(" returns buffer size, and "),e("a",{attrs:{href:"#fifobuffer-availabletowrite"}},[t._v("FIFOBuffer::availableToWrite()")]),t._v(" returns 0. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("FIFOBuffer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" buffer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size bufferSize"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           v_buff_size readPosition "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size writePosition "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" canRead "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-setbufferposition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-setbufferposition"}},[t._v("#")]),t._v(" FIFOBuffer::setBufferPosition")]),t._v(" "),e("p",[t._v("Set read and write positions in buffer. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" readPosition - read position in buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" writePosition - write position in buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" canRead - flag to resolve ambiguity when readPosition == writePosition. If(readPosition == writePosition  canRead) then "),e("a",{attrs:{href:"#fifobuffer-availabletoread"}},[t._v("FIFOBuffer::availableToRead()")]),t._v(" returns buffer size, and "),e("a",{attrs:{href:"#fifobuffer-availabletowrite"}},[t._v("FIFOBuffer::availableToWrite()")]),t._v(" returns 0. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setBufferPosition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size readPosition"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size writePosition"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" canRead"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-availabletoread"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-availabletoread"}},[t._v("#")]),t._v(" FIFOBuffer::availableToRead")]),t._v(" "),e("p",[t._v("Amount of bytes currently available to read from buffer. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/IODefinitions/#v-io-size"}},[t._v("oatpp::v_io_size")]),t._v(". ")],1)])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("availableToRead")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-availabletowrite"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-availabletowrite"}},[t._v("#")]),t._v(" FIFOBuffer::availableToWrite")]),t._v(" "),e("p",[t._v("Amount of buffer space currently available for data writes. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/IODefinitions/#v-io-size"}},[t._v("oatpp::v_io_size")]),t._v(". ")],1)])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("availableToWrite")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-getbuffersize"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-getbuffersize"}},[t._v("#")]),t._v(" FIFOBuffer::getBufferSize")]),t._v(" "),e("p",[t._v("Get FIFOBuffer size. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" - FIFOBuffer size. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_buff_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBufferSize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-read"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-read"}},[t._v("#")]),t._v(" FIFOBuffer::read")]),t._v(" "),e("p",[t._v("read up to count bytes from the buffer to data "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" data ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@return")]),t._v(" [1..count], IOErrors. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-peek"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-peek"}},[t._v("#")]),t._v(" FIFOBuffer::peek")]),t._v(" "),e("p",[t._v("Peek up to count of bytes int he buffer "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" data ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@return")]),t._v(" [1..count], IOErrors. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("peek")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-commitreadoffset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-commitreadoffset"}},[t._v("#")]),t._v(" FIFOBuffer::commitReadOffset")]),t._v(" "),e("p",[t._v("Commit read offset "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@return")]),t._v(" [1..count], IOErrors. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitReadOffset")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-write"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-write"}},[t._v("#")]),t._v(" FIFOBuffer::write")]),t._v(" "),e("p",[t._v("write up to count bytes from data to buffer "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" data ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@return")]),t._v(" [1..count], IOErrors. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-readandwritetostream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-readandwritetostream"}},[t._v("#")]),t._v(" FIFOBuffer::readAndWriteToStream")]),t._v(" "),e("p",[t._v("call read and then write bytes read to output stream "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" stream ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@param")]),t._v(" action ")]),e("li",[e("strong",[t._v("@return")]),t._v(" [1..count], IOErrors. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readAndWriteToStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("WriteCallback"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" stream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" async"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Action"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-readfromstreamandwrite"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-readfromstreamandwrite"}},[t._v("#")]),t._v(" FIFOBuffer::readFromStreamAndWrite")]),t._v(" "),e("p",[t._v("call stream.read() and then write bytes read to buffer "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" stream ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@param")]),t._v(" action ")]),e("li",[e("strong",[t._v("@return")])])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFromStreamAndWrite")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ReadCallback"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" stream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" async"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Action"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-flushtostream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-flushtostream"}},[t._v("#")]),t._v(" FIFOBuffer::flushToStream")]),t._v(" "),e("p",[t._v("flush all availableToRead bytes to stream "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" stream ")]),e("li",[e("strong",[t._v("@return")])])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushToStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("OutputStream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" stream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"fifobuffer-flushtostreamasync"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fifobuffer-flushtostreamasync"}},[t._v("#")]),t._v(" FIFOBuffer::flushToStreamAsync")]),t._v(" "),e("p",[t._v("flush all availableToRead bytes to stream in asynchronous manner "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" stream - data::stream::OutputStream. ")]),e("li",[e("strong",[t._v("@return")]),t._v(" - async::CoroutineStarter. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("async"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("CoroutineStarter "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushToStreamAsync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("OutputStream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" stream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"synchronizedfifobuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synchronizedfifobuffer"}},[t._v("#")]),t._v(" SynchronizedFIFOBuffer")]),t._v(" "),e("p",[t._v("Same as FIFOBuffer + synchronization with SpinLock")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" data "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" buffer "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SynchronizedFIFOBuffer")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"methods-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods-2"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Return Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("[none]")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#synchronizedfifobuffer-synchronizedfifobuffer"}},[t._v("SynchronizedFIFOBuffer")])]),t._v(" "),e("td",[t._v("Constructor.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#synchronizedfifobuffer-setbufferposition"}},[t._v("setBufferPosition")])]),t._v(" "),e("td",[t._v("Set read and write positions in buffer.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#synchronizedfifobuffer-availabletoread"}},[t._v("availableToRead")])]),t._v(" "),e("td",[t._v("Amount of bytes currently available to read from buffer.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#synchronizedfifobuffer-availabletowrite"}},[t._v("availableToWrite")])]),t._v(" "),e("td",[t._v("Amount of buffer space currently available for data writes.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#synchronizedfifobuffer-read"}},[t._v("read")])]),t._v(" "),e("td",[t._v("read up to count bytes from the buffer to data")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#synchronizedfifobuffer-write"}},[t._v("write")])]),t._v(" "),e("td",[t._v("write up to count bytes from data to buffer")])])])]),t._v(" "),e("h3",{attrs:{id:"synchronizedfifobuffer-synchronizedfifobuffer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synchronizedfifobuffer-synchronizedfifobuffer"}},[t._v("#")]),t._v(" SynchronizedFIFOBuffer::SynchronizedFIFOBuffer")]),t._v(" "),e("p",[t._v("Constructor. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" buffer - pointer to buffer used for reads/writes. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" bufferSize - buffer size. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" readPosition - initial read position in buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" writePosition - initial write position in buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" canRead - flag to resolve ambiguity when readPosition == writePosition. If(readPosition == writePosition  canRead) then "),e("a",{attrs:{href:"#synchronizedfifobuffer-availabletoread"}},[t._v("SynchronizedFIFOBuffer::availableToRead()")]),t._v(" returns buffer size, and "),e("a",{attrs:{href:"#synchronizedfifobuffer-availabletowrite"}},[t._v("SynchronizedFIFOBuffer::availableToWrite()")]),t._v(" returns 0. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("SynchronizedFIFOBuffer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" buffer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size bufferSize"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                       v_buff_size readPosition "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size writePosition "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                       "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" canRead "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"synchronizedfifobuffer-setbufferposition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synchronizedfifobuffer-setbufferposition"}},[t._v("#")]),t._v(" SynchronizedFIFOBuffer::setBufferPosition")]),t._v(" "),e("p",[t._v("Set read and write positions in buffer. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" readPosition - read position in buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" writePosition - write position in buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" canRead - flag to resolve ambiguity when readPosition == writePosition. If(readPosition == writePosition  canRead) then "),e("a",{attrs:{href:"#synchronizedfifobuffer-availabletoread"}},[t._v("SynchronizedFIFOBuffer::availableToRead()")]),t._v(" returns buffer size, and "),e("a",{attrs:{href:"#synchronizedfifobuffer-availabletowrite"}},[t._v("SynchronizedFIFOBuffer::availableToWrite()")]),t._v(" returns 0. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setBufferPosition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size readPosition"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size writePosition"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" canRead"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"synchronizedfifobuffer-availabletoread"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synchronizedfifobuffer-availabletoread"}},[t._v("#")]),t._v(" SynchronizedFIFOBuffer::availableToRead")]),t._v(" "),e("p",[t._v("Amount of bytes currently available to read from buffer. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/IODefinitions/#v-io-size"}},[t._v("oatpp::v_io_size")]),t._v(". ")],1)])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("availableToRead")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"synchronizedfifobuffer-availabletowrite"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synchronizedfifobuffer-availabletowrite"}},[t._v("#")]),t._v(" SynchronizedFIFOBuffer::availableToWrite")]),t._v(" "),e("p",[t._v("Amount of buffer space currently available for data writes. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/IODefinitions/#v-io-size"}},[t._v("oatpp::v_io_size")]),t._v(". ")],1)])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("availableToWrite")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"synchronizedfifobuffer-read"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synchronizedfifobuffer-read"}},[t._v("#")]),t._v(" SynchronizedFIFOBuffer::read")]),t._v(" "),e("p",[t._v("read up to count bytes from the buffer to data "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" data ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@return")]),t._v(" [1..count], IOErrors. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"synchronizedfifobuffer-write"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#synchronizedfifobuffer-write"}},[t._v("#")]),t._v(" SynchronizedFIFOBuffer::write")]),t._v(" "),e("p",[t._v("write up to count bytes from data to buffer "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" data ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@return")]),t._v(" [1..count], IOErrors. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);