(window.webpackJsonp=window.webpackJsonp||[]).push([[237],{609:function(t,a,r){"use strict";r.r(a);var s=r(42),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"multipart-hpp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-hpp"}},[t._v("#")]),t._v(" Multipart.hpp"),r("seo")],1),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/web/mime/multipart/Multipart.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/web/mime/multipart/Multipart.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("code",[t._v("API: latest")]),r("br"),t._v(" "),r("code",[t._v("module: oatpp")]),r("br"),t._v(" "),r("code",[t._v('#include "oatpp/web/mime/multipart/Multipart.hpp"')])]),t._v(" "),r("h2",{attrs:{id:"headers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#headers"}},[t._v("#")]),t._v(" Headers")]),t._v(" "),r("p",[r("strong",[t._v("Namespace:")]),t._v(" "),r("code",[t._v("oatpp::web::mime::multipart")])]),t._v(" "),r("p",[t._v("Typedef for headers map. Headers map key is case-insensitive. For more info see "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/share/LazyStringMap/#lazystringmap"}},[t._v("oatpp::data::share::LazyStringMap")]),t._v(".")],1),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("data"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("share"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("LazyStringMultimap"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("data"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("share"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("StringKeyLabelCI"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Headers\n")])])]),r("h2",{attrs:{id:"multipart"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart"}},[t._v("#")]),t._v(" Multipart")]),t._v(" "),r("p",[t._v("Abstract Multipart.")]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" web "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" mime "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" multipart "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Multipart")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h3",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Return Type")]),t._v(" "),r("th",[t._v("Name")]),t._v(" "),r("th",[t._v("Summary")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[r("code",[t._v("[none]")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#multipart-multipart"}},[t._v("Multipart")])]),t._v(" "),r("td",[t._v("Constructor.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("[none]")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#multipart-~multipart"}},[t._v("~Multipart")])]),t._v(" "),r("td",[t._v("Default virtual Destructor.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("oatpp::String")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#multipart-getboundary"}},[t._v("getBoundary")])]),t._v(" "),r("td",[t._v("Get multipart boundary value.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("std::shared_ptr<Part>")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#multipart-readnextpart"}},[t._v("readNextPart")])]),t._v(" "),r("td",[t._v("Read part-by-part from Multipart.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("void")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#multipart-writenextpart"}},[t._v("writeNextPart")])]),t._v(" "),r("td",[t._v("Write part-by-part to Multipart.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("std::shared_ptr<Part>")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#multipart-readnextpartsimple"}},[t._v("readNextPartSimple")])]),t._v(" "),r("td",[t._v("Read part-by-part from Multipart. "),r("br")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("void")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#multipart-writenextpartsimple"}},[t._v("writeNextPartSimple")])]),t._v(" "),r("td",[t._v("Write part-by-part to Multipart.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("oatpp::String")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#multipart-generaterandomboundary"}},[t._v("generateRandomBoundary")])]),t._v(" "),r("td",[t._v("Generate random boundary for Multipart object. Base64 encoded.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("oatpp::String")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#multipart-parseboundaryfromheaders"}},[t._v("parseBoundaryFromHeaders")])]),t._v(" "),r("td",[t._v("Parse boundary value from headers")])])])]),t._v(" "),r("h3",{attrs:{id:"multipart-multipart"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-multipart"}},[t._v("#")]),t._v(" Multipart::Multipart")]),t._v(" "),r("p",[t._v("Constructor. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" boundary - multipart boundary value. ")])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Multipart")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" boundary"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"multipart-multipart-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-multipart-2"}},[t._v("#")]),t._v(" Multipart::~Multipart")]),t._v(" "),r("p",[t._v("Default virtual Destructor.")]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("Multipart")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v("\n")])])]),r("h3",{attrs:{id:"multipart-getboundary"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-getboundary"}},[t._v("#")]),t._v(" Multipart::getBoundary")]),t._v(" "),r("p",[t._v("Get multipart boundary value. "),r("ul",[r("li",[r("strong",[t._v("@return")]),t._v(" - multipart boundary value. ")])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[t._v("oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBoundary")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"multipart-readnextpart"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-readnextpart"}},[t._v("#")]),t._v(" Multipart::readNextPart")]),t._v(" "),r("p",[t._v("Read part-by-part from Multipart. "),r("ul",[r("li",[r("strong",[t._v("@return")])])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Part"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("readNextPart")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("async"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Action"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" action"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),r("h3",{attrs:{id:"multipart-writenextpart"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-writenextpart"}},[t._v("#")]),t._v(" Multipart::writeNextPart")]),t._v(" "),r("p",[t._v("Write part-by-part to Multipart. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" part ")])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeNextPart")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Part"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" part"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" async"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Action"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" action"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),r("h3",{attrs:{id:"multipart-readnextpartsimple"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-readnextpartsimple"}},[t._v("#")]),t._v(" Multipart::readNextPartSimple")]),t._v(" "),r("p",[t._v("Read part-by-part from Multipart. "),r("br"),t._v(" Call writeNextPart(...) and throw if "),r("code",[t._v("action.isNone() == false")]),t._v(". "),r("ul",[r("li",[r("strong",[t._v("@return")])])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[t._v("std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Part"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("readNextPartSimple")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"multipart-writenextpartsimple"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-writenextpartsimple"}},[t._v("#")]),t._v(" Multipart::writeNextPartSimple")]),t._v(" "),r("p",[t._v("Write part-by-part to Multipart. Call writeNextPartSimple(...) and throw if "),r("code",[t._v("action.isNone() == false")]),t._v(". "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" part ")])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeNextPartSimple")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Part"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" part"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"multipart-generaterandomboundary"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-generaterandomboundary"}},[t._v("#")]),t._v(" Multipart::generateRandomBoundary")]),t._v(" "),r("p",[t._v("Generate random boundary for Multipart object. Base64 encoded. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" boundarySize - size in bytes of random vector. ")]),r("li",[r("strong",[t._v("@return")]),t._v(" - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(". ")],1)])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("generateRandomBoundary")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_int32 boundarySize "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"multipart-parseboundaryfromheaders"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#multipart-parseboundaryfromheaders"}},[t._v("#")]),t._v(" Multipart::parseBoundaryFromHeaders")]),t._v(" "),r("p",[t._v("Parse boundary value from headers "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" headers ")]),r("li",[r("strong",[t._v("@return")])])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" oatpp"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseBoundaryFromHeaders")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Headers"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" requestHeaders"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);