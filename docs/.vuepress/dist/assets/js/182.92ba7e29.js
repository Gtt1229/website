(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{553:function(t,e,a){"use strict";a.r(e);var r=a(42),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"chunkedbuffer-hpp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-hpp"}},[t._v("#")]),t._v(" ChunkedBuffer.hpp"),a("seo")],1),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/core/data/stream/ChunkedBuffer.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/core/data/stream/ChunkedBuffer.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("API: latest")]),a("br"),t._v(" "),a("code",[t._v("module: oatpp")]),a("br"),t._v(" "),a("code",[t._v('#include "oatpp/core/data/stream/ChunkedBuffer.hpp"')])]),t._v(" "),a("h2",{attrs:{id:"chunkedbuffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer"}},[t._v("#")]),t._v(" ChunkedBuffer")]),t._v(" "),a("p",[t._v("Buffer wich can grow by chunks and implements "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#consistentoutputstream"}},[t._v("oatpp::data::stream::ConsistentOutputStream")]),t._v(" interface.")],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" stream "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChunkedBuffer")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("base"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Countable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" ConsistentOutputStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("enable_shared_from_this"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ChunkedBuffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Return Type")]),t._v(" "),a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Summary")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("[none]")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-chunkedbuffer"}},[t._v("ChunkedBuffer")])]),t._v(" "),a("td",[t._v("Multiple implementations: "),a("br"),a("ol",[a("li",[t._v("Constructor. ")]),a("li",[t._v("Deleted copy constructor. ")])])])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("[none]")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-~chunkedbuffer"}},[t._v("~ChunkedBuffer")])]),t._v(" "),a("td",[t._v("Virtual Destructor.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("std::shared_ptr<ChunkedBuffer>")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-createshared"}},[t._v("createShared")])]),t._v(" "),a("td",[t._v("Create shared ChunkedBuffer.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("v_io_size")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-write"}},[t._v("write")])]),t._v(" "),a("td",[t._v("Write data to ChunkedBuffer. Implementation of oatpp::data::stream::OutputStream::write method.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-setoutputstreamiomode"}},[t._v("setOutputStreamIOMode")])]),t._v(" "),a("td",[t._v("Set stream I/O mode.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("IOMode")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-getoutputstreamiomode"}},[t._v("getOutputStreamIOMode")])]),t._v(" "),a("td",[t._v("Set stream I/O mode.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("Context&")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-getoutputstreamcontext"}},[t._v("getOutputStreamContext")])]),t._v(" "),a("td",[t._v("Get stream context.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("v_io_size")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-readsubstring"}},[t._v("readSubstring")])]),t._v(" "),a("td",[t._v("Read part of ChunkedBuffer to buffer.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("oatpp::String")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-getsubstring"}},[t._v("getSubstring")])]),t._v(" "),a("td",[t._v("Create "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(" from part of ChunkedBuffer.")],1)]),t._v(" "),a("tr",[a("td",[a("code",[t._v("oatpp::String")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-tostring"}},[t._v("toString")])]),t._v(" "),a("td",[t._v("Create "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(" from all data in ChunkedBuffer.")],1)]),t._v(" "),a("tr",[a("td",[a("code",[t._v("bool")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-flushtostream"}},[t._v("flushToStream")])]),t._v(" "),a("td",[t._v("Write all data from ChunkedBuffer to "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#outputstream"}},[t._v("oatpp::data::stream::OutputStream")]),t._v(".")],1)]),t._v(" "),a("tr",[a("td",[a("code",[t._v("oatpp::async::CoroutineStarter")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-flushtostreamasync"}},[t._v("flushToStreamAsync")])]),t._v(" "),a("td",[t._v("Write all data from ChunkedBuffer to "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#outputstream"}},[t._v("oatpp::data::stream::OutputStream")]),t._v(" in asynchronous manner.")],1)]),t._v(" "),a("tr",[a("td",[a("code",[t._v("v_buff_size")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-getsize"}},[t._v("getSize")])]),t._v(" "),a("td",[t._v("Get number of bytes written to ChunkedBuffer.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("void")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedbuffer-clear"}},[t._v("clear")])]),t._v(" "),a("td",[t._v("Clear data in ChunkedBuffer.")])])])]),t._v(" "),a("h3",{attrs:{id:"chunkedbuffer-chunkedbuffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-chunkedbuffer"}},[t._v("#")]),t._v(" ChunkedBuffer::ChunkedBuffer")]),t._v(" "),a("ol",[a("li",[t._v("Constructor."),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ChunkedBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("Deleted copy constructor."),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ChunkedBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ChunkedBuffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"chunkedbuffer-chunkedbuffer-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-chunkedbuffer-2"}},[t._v("#")]),t._v(" ChunkedBuffer::~ChunkedBuffer")]),t._v(" "),a("p",[t._v("Virtual Destructor.")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ChunkedBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-createshared"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-createshared"}},[t._v("#")]),t._v(" ChunkedBuffer::createShared")]),t._v(" "),a("p",[t._v("Create shared ChunkedBuffer. "),a("ul",[a("li",[a("strong",[t._v("@return")]),t._v(" "),a("code",[t._v("std::shared_ptr")]),t._v(" to ChunkedBuffer. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ChunkedBuffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShared")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-write"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-write"}},[t._v("#")]),t._v(" ChunkedBuffer::write")]),t._v(" "),a("p",[t._v("Write data to ChunkedBuffer. Implementation of oatpp::data::stream::OutputStream::write method. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" data - data to write. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" count - size of data in bytes. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" action - async specific action. If action is NOT "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#action-type-none"}},[t._v("oatpp::async::Action::TYPE_NONE")]),t._v(", then caller MUST return this action on coroutine iteration. ")],1),a("li",[a("strong",[t._v("@return")]),t._v(" - actual number of bytes written. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_io_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" async"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Action"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" action"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-setoutputstreamiomode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-setoutputstreamiomode"}},[t._v("#")]),t._v(" ChunkedBuffer::setOutputStreamIOMode")]),t._v(" "),a("p",[t._v("Set stream I/O mode. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" ioMode ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setOutputStreamIOMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IOMode ioMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-getoutputstreamiomode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-getoutputstreamiomode"}},[t._v("#")]),t._v(" ChunkedBuffer::getOutputStreamIOMode")]),t._v(" "),a("p",[t._v("Set stream I/O mode. "),a("ul",[a("li",[a("strong",[t._v("@return")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("IOMode "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutputStreamIOMode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-getoutputstreamcontext"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-getoutputstreamcontext"}},[t._v("#")]),t._v(" ChunkedBuffer::getOutputStreamContext")]),t._v(" "),a("p",[t._v("Get stream context. "),a("ul",[a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#context"}},[t._v("oatpp::data::stream::Context")]),t._v(". ")],1)])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("Context"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutputStreamContext")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-readsubstring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-readsubstring"}},[t._v("#")]),t._v(" ChunkedBuffer::readSubstring")]),t._v(" "),a("p",[t._v("Read part of ChunkedBuffer to buffer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" buffer - buffer to write data to. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" pos - starting position in ChunkedBuffer to read data from. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" count - number of bytes to read. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - actual number of bytes read from ChunkedBuffer and written to buffer. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_io_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readSubstring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-getsubstring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-getsubstring"}},[t._v("#")]),t._v(" ChunkedBuffer::getSubstring")]),t._v(" "),a("p",[t._v("Create "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(" from part of ChunkedBuffer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" pos - starting position in ChunkedBuffer. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" count - size of bytes to write to substring. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")])],1)])],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSubstring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-tostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-tostring"}},[t._v("#")]),t._v(" ChunkedBuffer::toString")]),t._v(" "),a("p",[t._v("Create "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(" from all data in ChunkedBuffer. "),a("ul",[a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")])],1)])],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-flushtostream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-flushtostream"}},[t._v("#")]),t._v(" ChunkedBuffer::flushToStream")]),t._v(" "),a("p",[t._v("Write all data from ChunkedBuffer to "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#outputstream"}},[t._v("oatpp::data::stream::OutputStream")]),t._v(". ChunkedBuffer will not be cleared during this call! "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" stream - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#outputstream"}},[t._v("oatpp::data::stream::OutputStream")]),t._v(" stream to write all data to. ")],1),a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("code",[t._v("true")]),t._v(" if no errors occured. "),a("strong",[t._v("will be refactored to return actual amount of bytes flushed")]),t._v(". ")])])],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushToStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OutputStream"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" stream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-flushtostreamasync"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-flushtostreamasync"}},[t._v("#")]),t._v(" ChunkedBuffer::flushToStreamAsync")]),t._v(" "),a("p",[t._v("Write all data from ChunkedBuffer to "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#outputstream"}},[t._v("oatpp::data::stream::OutputStream")]),t._v(" in asynchronous manner. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" stream - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#outputstream"}},[t._v("oatpp::data::stream::OutputStream")]),t._v(" stream to write all data to. ")],1),a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#coroutinestarter"}},[t._v("oatpp::async::CoroutineStarter")]),t._v(". ")],1)])],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("async"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("CoroutineStarter "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushToStreamAsync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("OutputStream"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" stream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-getsize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-getsize"}},[t._v("#")]),t._v(" ChunkedBuffer::getSize")]),t._v(" "),a("p",[t._v("Get number of bytes written to ChunkedBuffer. "),a("ul",[a("li",[a("strong",[t._v("@return")]),t._v(" - number of bytes written to ChunkedBuffer. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_buff_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"chunkedbuffer-clear"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedbuffer-clear"}},[t._v("#")]),t._v(" ChunkedBuffer::clear")]),t._v(" "),a("p",[t._v("Clear data in ChunkedBuffer.")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);