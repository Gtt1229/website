(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{524:function(a,t,o){"use strict";o.r(t);var s=o(42),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,o=a._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("h1",{attrs:{id:"allocator-hpp"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#allocator-hpp"}},[a._v("#")]),a._v(" Allocator.hpp"),o("seo")],1),a._v(" "),o("p",[o("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/core/base/memory/Allocator.hpp",target:"_blank",rel:"noopener noreferrer"}},[a._v("This File On Github"),o("OutboundLink")],1),o("br"),a._v(" "),o("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/core/base/memory/Allocator.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[a._v("Ask A Question"),o("OutboundLink")],1)]),a._v(" "),o("p",[o("code",[a._v("API: latest")]),o("br"),a._v(" "),o("code",[a._v("module: oatpp")]),o("br"),a._v(" "),o("code",[a._v('#include "oatpp/core/base/memory/Allocator.hpp"')])]),a._v(" "),o("h2",{attrs:{id:"allocatorpoolinfo"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#allocatorpoolinfo"}},[a._v("#")]),a._v(" AllocatorPoolInfo")]),a._v(" "),o("p",[a._v("Pool Information for Pool Allocators.")]),a._v(" "),o("div",{staticClass:"language-cpp extra-class"},[o("pre",{pre:!0,attrs:{class:"language-cpp"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" oatpp "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" base "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" memory "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AllocatorPoolInfo")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),o("h3",{attrs:{id:"fields"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#fields"}},[a._v("#")]),a._v(" Fields")]),a._v(" "),o("table",[o("thead",[o("tr",[o("th",[a._v("Type")]),a._v(" "),o("th",[a._v("Name")]),a._v(" "),o("th",[a._v("Summary")])])]),a._v(" "),o("tbody",[o("tr",[o("td",[o("code",[a._v("const char* const")])]),a._v(" "),o("td",[o("a",{attrs:{href:"#allocatorpoolinfo-poolname"}},[a._v("poolName")])]),a._v(" "),o("td",[a._v("Memory pool name.")])]),a._v(" "),o("tr",[o("td",[o("code",[a._v("const v_buff_size")])]),a._v(" "),o("td",[o("a",{attrs:{href:"#allocatorpoolinfo-poolchunksize"}},[a._v("poolChunkSize")])]),a._v(" "),o("td",[a._v("Memory pool chunk size. For more about chunk size see "),o("RouterLink",{attrs:{to:"/api/latest/oatpp/core/base/memory/MemoryPool/#memorypool-memorypool"}},[a._v("oatpp::base::memory::MemoryPool::MemoryPool()")]),a._v(".")],1)])])]),a._v(" "),o("h3",{attrs:{id:"methods"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[a._v("#")]),a._v(" Methods")]),a._v(" "),o("table",[o("thead",[o("tr",[o("th",[a._v("Return Type")]),a._v(" "),o("th",[a._v("Name")]),a._v(" "),o("th",[a._v("Summary")])])]),a._v(" "),o("tbody",[o("tr",[o("td",[o("code",[a._v("[none]")])]),a._v(" "),o("td",[o("a",{attrs:{href:"#allocatorpoolinfo-allocatorpoolinfo"}},[a._v("AllocatorPoolInfo")])]),a._v(" "),o("td",[a._v("Constructor.")])])])]),a._v(" "),o("h3",{attrs:{id:"allocatorpoolinfo-poolname"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#allocatorpoolinfo-poolname"}},[a._v("#")]),a._v(" AllocatorPoolInfo::poolName")]),a._v(" "),o("p",[a._v("Memory pool name.")]),a._v(" "),o("div",{staticClass:"language-cpp extra-class"},[o("pre",{pre:!0,attrs:{class:"language-cpp"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" poolName\n")])])]),o("h3",{attrs:{id:"allocatorpoolinfo-poolchunksize"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#allocatorpoolinfo-poolchunksize"}},[a._v("#")]),a._v(" AllocatorPoolInfo::poolChunkSize")]),a._v(" "),o("p",[a._v("Memory pool chunk size. For more about chunk size see "),o("RouterLink",{attrs:{to:"/api/latest/oatpp/core/base/memory/MemoryPool/#memorypool-memorypool"}},[a._v("oatpp::base::memory::MemoryPool::MemoryPool()")]),a._v(".")],1),a._v(" "),o("div",{staticClass:"language-cpp extra-class"},[o("pre",{pre:!0,attrs:{class:"language-cpp"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" v_buff_size poolChunkSize\n")])])]),o("h3",{attrs:{id:"allocatorpoolinfo-allocatorpoolinfo"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#allocatorpoolinfo-allocatorpoolinfo"}},[a._v("#")]),a._v(" AllocatorPoolInfo::AllocatorPoolInfo")]),a._v(" "),o("p",[a._v("Constructor. "),o("ul",[o("li",[o("strong",[a._v("@param")]),a._v(" pPoolName - memory pool name. ")]),o("li",[o("strong",[a._v("@param")]),a._v(" pPoolChunkSize - memory pool chunk size. For more about chunk size see "),o("RouterLink",{attrs:{to:"/api/latest/oatpp/core/base/memory/MemoryPool/#memorypool-memorypool"}},[a._v("oatpp::base::memory::MemoryPool::MemoryPool()")]),a._v(". ")],1)])]),a._v(" "),o("div",{staticClass:"language-cpp extra-class"},[o("pre",{pre:!0,attrs:{class:"language-cpp"}},[o("code",[o("span",{pre:!0,attrs:{class:"token function"}},[a._v("AllocatorPoolInfo")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" pPoolName"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" v_buff_size pPoolChunkSize"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])])]),o("h2",{attrs:{id:"poolsharedobjectallocator"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#poolsharedobjectallocator"}},[a._v("#")]),a._v(" PoolSharedObjectAllocator")]),a._v(" "),o("p",[a._v("Allocator to allocate shared object on "),o("RouterLink",{attrs:{to:"/api/latest/oatpp/core/base/memory/MemoryPool/#memorypool"}},[a._v("oatpp::base::memory::MemoryPool")]),a._v(" Used to allocate shared_ptr control block and an object in the same memory entry of the pool. "),o("ul",[o("li",[o("strong",[a._v("@tparam")]),a._v(" T - type of the object to allocate. ")])])],1),a._v(" "),o("div",{staticClass:"language-cpp extra-class"},[o("pre",{pre:!0,attrs:{class:"language-cpp"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" oatpp "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" base "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" memory "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("template")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PoolSharedObjectAllocator")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),o("h2",{attrs:{id:"threadlocalpoolsharedobjectallocator"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#threadlocalpoolsharedobjectallocator"}},[a._v("#")]),a._v(" ThreadLocalPoolSharedObjectAllocator")]),a._v(" "),o("p",[a._v("Same as "),o("a",{attrs:{href:"#poolsharedobjectallocator"}},[a._v("PoolSharedObjectAllocator")]),a._v(" but uses "),o("code",[a._v("thread_local")]),a._v(" "),o("RouterLink",{attrs:{to:"/api/latest/oatpp/core/base/memory/MemoryPool/#memorypool"}},[a._v("oatpp::base::memory::MemoryPool")]),a._v(". "),o("br"),a._v(" "),o("em",[a._v("If built with OATPP_COMPAT_BUILD_NO_THREAD_LOCAL flag - same as "),o("a",{attrs:{href:"#poolsharedobjectallocator"}},[a._v("PoolSharedObjectAllocator")]),a._v(".")]),a._v(" "),o("ul",[o("li",[o("strong",[a._v("@tparam")]),a._v(" T - type of the object to allocate. ")])])],1),a._v(" "),o("div",{staticClass:"language-cpp extra-class"},[o("pre",{pre:!0,attrs:{class:"language-cpp"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" oatpp "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" base "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" memory "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("template")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ThreadLocalPoolSharedObjectAllocator")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),o("h2",{attrs:{id:"allocationextras"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#allocationextras"}},[a._v("#")]),a._v(" AllocationExtras")]),a._v(" "),o("p",[a._v("Extra information for, and about allocation. Used for variable-size objects allocations. (ex.: for strings).")]),a._v(" "),o("div",{staticClass:"language-cpp extra-class"},[o("pre",{pre:!0,attrs:{class:"language-cpp"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" oatpp "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" base "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" memory "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AllocationExtras")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),o("h2",{attrs:{id:"sharedobjectallocator"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#sharedobjectallocator"}},[a._v("#")]),a._v(" SharedObjectAllocator")]),a._v(" "),o("p",[a._v("Allocator for shared objects. Used to allocate object and shared_ptr's control block in the same memory entry. "),o("ul",[o("li",[o("strong",[a._v("@tparam")]),a._v(" T - type of the object to allocate. ")])])]),a._v(" "),o("div",{staticClass:"language-cpp extra-class"},[o("pre",{pre:!0,attrs:{class:"language-cpp"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" oatpp "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" base "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" memory "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("template")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SharedObjectAllocator")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),o("h2",{attrs:{id:"custompoolsharedobjectallocator"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#custompoolsharedobjectallocator"}},[a._v("#")]),a._v(" CustomPoolSharedObjectAllocator")]),a._v(" "),o("p",[a._v("Allocator for shared objects. Allocates objects on the pool provided. "),o("ul",[o("li",[o("strong",[a._v("@tparam")]),a._v(" T - type of object to allocate. ")]),o("li",[o("strong",[a._v("@tparam")]),a._v(" P - type of memory pool to allocate object on. ")])])]),a._v(" "),o("div",{staticClass:"language-cpp extra-class"},[o("pre",{pre:!0,attrs:{class:"language-cpp"}},[o("code",[o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" oatpp "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" base "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("namespace")]),a._v(" memory "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v(" \n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("template")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("T")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("P")]),o("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v("\n  "),o("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("CustomPoolSharedObjectAllocator")]),a._v(" "),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),o("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);