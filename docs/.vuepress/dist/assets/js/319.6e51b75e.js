(window.webpackJsonp=window.webpackJsonp||[]).push([[319],{691:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"consul-integration-example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consul-integration-example"}},[t._v("#")]),t._v(" Consul Integration Example "),a("seo")],1),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/oatpp/example-consul",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github Repository"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Example project how-to use "),a("RouterLink",{attrs:{to:"/docs/modules/oatpp-consul/"}},[t._v("oatpp-consul")]),t._v(" module.")],1),t._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),a("p",[t._v("This project is using "),a("RouterLink",{attrs:{to:"/docs/modules/oatpp/"}},[t._v("oatpp")]),t._v(" and "),a("RouterLink",{attrs:{to:"/docs/modules/oatpp-consul/"}},[t._v("oatpp-consul")]),t._v(" modules.")],1),t._v(" "),a("p",[t._v("Currently this is trivial example.- Read/Write from/to Consul KV via endpoints declared in Controller.\nMore complex example later.")]),t._v(" "),a("p",[t._v("In this example Consul is expected to run at port 8500.")]),t._v(" "),a("h3",{attrs:{id:"project-layout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#project-layout"}},[t._v("#")]),t._v(" Project layout")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("|- CMakeLists.txt                        // projects CMakeLists.txt\n|- src/\n|    |\n|    |- controller/                      // Folder containing controller where all endpoints are declared\n|    |- dto/                             // DTOs are declared here\n|    |- AppComponent.hpp                 // Service config\n|    |- App.cpp                          // main() is here\n|\n|- test/                                 // test folder\n|- utility/install-oatpp-modules.sh      // utility script to install required oatpp-modules.\n")])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"build-and-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-and-run"}},[t._v("#")]),t._v(" Build and Run")]),t._v(" "),a("h4",{attrs:{id:"using-cmake"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-cmake"}},[t._v("#")]),t._v(" Using CMake")]),t._v(" "),a("p",[a("strong",[t._v("Requires")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("oatpp")]),t._v(" and "),a("code",[t._v("oatpp-consul")]),t._v(" modules installed. You may run "),a("code",[t._v("utility/install-oatpp-modules.sh")]),t._v("\nscript to install required oatpp modules.")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" build "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" build\n$ cmake "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n$ "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" \n$ ./example-consul-exe          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - run application.")]),t._v("\n")])])]),a("h4",{attrs:{id:"in-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-docker"}},[t._v("#")]),t._v(" In Docker")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ docker build -t example-consul "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n$ docker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),t._v(":8000 -t example-consul\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);