(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{552:function(t,a,e){"use strict";e.r(a);var s=e(42),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"bufferstream-hpp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferstream-hpp"}},[t._v("#")]),t._v(" BufferStream.hpp"),e("seo")],1),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/core/data/stream/BufferStream.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/core/data/stream/BufferStream.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("code",[t._v("API: latest")]),e("br"),t._v(" "),e("code",[t._v("module: oatpp")]),e("br"),t._v(" "),e("code",[t._v('#include "oatpp/core/data/stream/BufferStream.hpp"')])]),t._v(" "),e("h2",{attrs:{id:"bufferoutputstream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream"}},[t._v("#")]),t._v(" BufferOutputStream")]),t._v(" "),e("p",[t._v("BufferOutputStream")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" data "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" stream "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferOutputStream")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" ConsistentOutputStream "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Return Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("[none]")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-bufferoutputstream"}},[t._v("BufferOutputStream")])]),t._v(" "),e("td",[t._v("Constructor.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("[none]")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-~bufferoutputstream"}},[t._v("~BufferOutputStream")])]),t._v(" "),e("td",[t._v("Virtual destructor.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-write"}},[t._v("write")])]),t._v(" "),e("td",[t._v("Write "),e("code",[t._v("count")]),t._v(" of bytes to stream.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-setoutputstreamiomode"}},[t._v("setOutputStreamIOMode")])]),t._v(" "),e("td",[t._v("Set stream I/O mode.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("IOMode")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-getoutputstreamiomode"}},[t._v("getOutputStreamIOMode")])]),t._v(" "),e("td",[t._v("Get stream I/O mode.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Context&")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-getoutputstreamcontext"}},[t._v("getOutputStreamContext")])]),t._v(" "),e("td",[t._v("Get stream context.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-reservebytesupfront"}},[t._v("reserveBytesUpfront")])]),t._v(" "),e("td",[t._v("Reserve bytes for future writes.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("p_char8")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-getdata"}},[t._v("getData")])]),t._v(" "),e("td",[t._v("Get pointer to data.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_buff_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-getcapacity"}},[t._v("getCapacity")])]),t._v(" "),e("td",[t._v("Get current capacity.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_buff_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-getcurrentposition"}},[t._v("getCurrentPosition")])]),t._v(" "),e("td",[t._v("Get current data write position.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-setcurrentposition"}},[t._v("setCurrentPosition")])]),t._v(" "),e("td",[t._v("Set current data write position.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-reset"}},[t._v("reset")])]),t._v(" "),e("td",[t._v("Reset stream buffer and its capacity. Also reset write position.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("oatpp::String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-tostring"}},[t._v("toString")])]),t._v(" "),e("td",[t._v("Copy data to "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(".")],1)]),t._v(" "),e("tr",[e("td",[e("code",[t._v("oatpp::String")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-getsubstring"}},[t._v("getSubstring")])]),t._v(" "),e("td",[t._v("Create "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(" from part of buffer.")],1)]),t._v(" "),e("tr",[e("td",[e("code",[t._v("oatpp::v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-flushtostream"}},[t._v("flushToStream")])]),t._v(" "),e("td",[t._v("Write all bytes from buffer to stream.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("oatpp::async::CoroutineStarter")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferoutputstream-flushtostreamasync"}},[t._v("flushToStreamAsync")])]),t._v(" "),e("td",[t._v("Write all bytes from buffer to stream in async manner.")])])])]),t._v(" "),e("h3",{attrs:{id:"bufferoutputstream-bufferoutputstream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-bufferoutputstream"}},[t._v("#")]),t._v(" BufferOutputStream::BufferOutputStream")]),t._v(" "),e("p",[t._v("Constructor. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" growBytes ")]),e("li",[e("strong",[t._v("@param")]),t._v(" captureData - capture auxiliary data to not get deleted until it's done with the stream. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("BufferOutputStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size initialCapacity "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" captureData "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-bufferoutputstream-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-bufferoutputstream-2"}},[t._v("#")]),t._v(" BufferOutputStream::~BufferOutputStream")]),t._v(" "),e("p",[t._v("Virtual destructor.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("BufferOutputStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-write"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-write"}},[t._v("#")]),t._v(" BufferOutputStream::write")]),t._v(" "),e("p",[t._v("Write "),e("code",[t._v("count")]),t._v(" of bytes to stream. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" data - data to write. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count - number of bytes to write. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" action - async specific action. If action is NOT "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#action-type-none"}},[t._v("oatpp::async::Action::TYPE_NONE")]),t._v(", then caller MUST return this action on coroutine iteration. ")],1),e("li",[e("strong",[t._v("@return")]),t._v(" - actual number of bytes written. "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/IODefinitions/#v-io-size"}},[t._v("oatpp::v_io_size")]),t._v(". ")],1)])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" async"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Action"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-setoutputstreamiomode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-setoutputstreamiomode"}},[t._v("#")]),t._v(" BufferOutputStream::setOutputStreamIOMode")]),t._v(" "),e("p",[t._v("Set stream I/O mode. "),e("ul",[e("li",[e("strong",[t._v("@throws")])])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setOutputStreamIOMode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IOMode ioMode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-getoutputstreamiomode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-getoutputstreamiomode"}},[t._v("#")]),t._v(" BufferOutputStream::getOutputStreamIOMode")]),t._v(" "),e("p",[t._v("Get stream I/O mode. "),e("ul",[e("li",[e("strong",[t._v("@return")])])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("IOMode "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutputStreamIOMode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-getoutputstreamcontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-getoutputstreamcontext"}},[t._v("#")]),t._v(" BufferOutputStream::getOutputStreamContext")]),t._v(" "),e("p",[t._v("Get stream context. "),e("ul",[e("li",[e("strong",[t._v("@return")])])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("Context"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getOutputStreamContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-reservebytesupfront"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-reservebytesupfront"}},[t._v("#")]),t._v(" BufferOutputStream::reserveBytesUpfront")]),t._v(" "),e("p",[t._v("Reserve bytes for future writes.")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reserveBytesUpfront")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-getdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-getdata"}},[t._v("#")]),t._v(" BufferOutputStream::getData")]),t._v(" "),e("p",[t._v("Get pointer to data. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" - pointer to data. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("p_char8 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-getcapacity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-getcapacity"}},[t._v("#")]),t._v(" BufferOutputStream::getCapacity")]),t._v(" "),e("p",[t._v("Get current capacity. Capacity may change. "),e("ul",[e("li",[e("strong",[t._v("@return")])])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_buff_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCapacity")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-getcurrentposition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-getcurrentposition"}},[t._v("#")]),t._v(" BufferOutputStream::getCurrentPosition")]),t._v(" "),e("p",[t._v("Get current data write position. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" - current data write position. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_buff_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentPosition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-setcurrentposition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-setcurrentposition"}},[t._v("#")]),t._v(" BufferOutputStream::setCurrentPosition")]),t._v(" "),e("p",[t._v("Set current data write position. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" position - data write position. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCurrentPosition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size position"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-reset"}},[t._v("#")]),t._v(" BufferOutputStream::reset")]),t._v(" "),e("p",[t._v("Reset stream buffer and its capacity. Also reset write position. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" initialCapacity ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size initialCapacity "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-tostring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-tostring"}},[t._v("#")]),t._v(" BufferOutputStream::toString")]),t._v(" "),e("p",[t._v("Copy data to "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(". "),e("ul",[e("li",[e("strong",[t._v("@return")])])])],1),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-getsubstring"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-getsubstring"}},[t._v("#")]),t._v(" BufferOutputStream::getSubstring")]),t._v(" "),e("p",[t._v("Create "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(" from part of buffer. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" pos - starting position in buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count - size of bytes to write to substring. ")]),e("li",[e("strong",[t._v("@return")]),t._v(" - "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")])],1)])],1),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSubstring")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size pos"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-flushtostream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-flushtostream"}},[t._v("#")]),t._v(" BufferOutputStream::flushToStream")]),t._v(" "),e("p",[t._v("Write all bytes from buffer to stream. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" stream - stream to flush all data to. ")]),e("li",[e("strong",[t._v("@return")]),t._v(" - actual amount of bytes flushed. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushToStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("OutputStream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" stream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferoutputstream-flushtostreamasync"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferoutputstream-flushtostreamasync"}},[t._v("#")]),t._v(" BufferOutputStream::flushToStreamAsync")]),t._v(" "),e("p",[t._v("Write all bytes from buffer to stream in async manner. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" _this - pointer to "),e("code",[t._v("this")]),t._v(" buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" stream - stream to flush all data to. ")]),e("li",[e("strong",[t._v("@return")]),t._v(" - "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#coroutinestarter"}},[t._v("oatpp::async::CoroutineStarter")]),t._v(". ")],1)])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("async"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("CoroutineStarter "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("flushToStreamAsync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("BufferOutputStream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" _this"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("OutputStream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" stream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"bufferinputstream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream"}},[t._v("#")]),t._v(" BufferInputStream")]),t._v(" "),e("p",[t._v("BufferInputStream")]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" data "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" stream "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BufferInputStream")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" BufferedInputStream "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"methods-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods-2"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Return Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("[none]")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-bufferinputstream"}},[t._v("BufferInputStream")])]),t._v(" "),e("td",[t._v("Multiple implementations: "),e("br"),e("ol",[e("li",[t._v("Constructor. ")]),e("li",[t._v("Constructor. ")])])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-reset"}},[t._v("reset")])]),t._v(" "),e("td",[t._v("Multiple implementations: "),e("br"),e("ol",[e("li",[t._v("Reset stream data and set position to "),e("code",[t._v("0")]),t._v(". ")]),e("li",[t._v("Same as "),e("code",[t._v("reset(nullptr, nullptr, 0);.")])])])])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-read"}},[t._v("read")])]),t._v(" "),e("td",[t._v("Read data from stream. "),e("br")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-setinputstreamiomode"}},[t._v("setInputStreamIOMode")])]),t._v(" "),e("td",[t._v("Set stream I/O mode.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("IOMode")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-getinputstreamiomode"}},[t._v("getInputStreamIOMode")])]),t._v(" "),e("td",[t._v("Get stream I/O mode.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Context&")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-getinputstreamcontext"}},[t._v("getInputStreamContext")])]),t._v(" "),e("td",[t._v("Get stream context.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("std::shared_ptr<std::string>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-getdatamemoryhandle"}},[t._v("getDataMemoryHandle")])]),t._v(" "),e("td",[t._v("Get data memory handle.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("p_char8")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-getdata"}},[t._v("getData")])]),t._v(" "),e("td",[t._v("Get pointer to data.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_buff_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-getdatasize"}},[t._v("getDataSize")])]),t._v(" "),e("td",[t._v("Get data size.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_buff_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-getcurrentposition"}},[t._v("getCurrentPosition")])]),t._v(" "),e("td",[t._v("Get current data read position.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-setcurrentposition"}},[t._v("setCurrentPosition")])]),t._v(" "),e("td",[t._v("Set current data read position.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-peek"}},[t._v("peek")])]),t._v(" "),e("td",[t._v("Peek up to count of bytes int he buffer")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-availabletoread"}},[t._v("availableToRead")])]),t._v(" "),e("td",[t._v("Amount of bytes currently available to read from buffer.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("v_io_size")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bufferinputstream-commitreadoffset"}},[t._v("commitReadOffset")])]),t._v(" "),e("td",[t._v("Commit read offset")])])])]),t._v(" "),e("h3",{attrs:{id:"bufferinputstream-bufferinputstream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-bufferinputstream"}},[t._v("#")]),t._v(" BufferInputStream::BufferInputStream")]),t._v(" "),e("ol",[e("li",[t._v("Constructor. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" memoryHandle - buffer memory handle. May be nullptr. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" data - pointer to buffer data. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" size - size of the buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" captureData - capture auxiliary data to not get deleted until it's done with the stream. ")])]),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("BufferInputStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" memoryHandle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                  v_buff_size size"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" captureData "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("Constructor. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" data - buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" captureData - capture auxiliary data to not get deleted until it's done with the stream. ")])]),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("BufferInputStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" captureData "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"bufferinputstream-reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-reset"}},[t._v("#")]),t._v(" BufferInputStream::reset")]),t._v(" "),e("ol",[e("li",[t._v("Reset stream data and set position to "),e("code",[t._v("0")]),t._v(". "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" memoryHandle - buffer memory handle. May be nullptr. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" data - pointer to buffer data. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" size - size of the buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" captureData - capture auxiliary data to not get deleted until it's done with the stream. ")])]),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" memoryHandle"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           p_char8 data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           v_buff_size size"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n           "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" captureData "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("Same as "),e("code",[t._v("reset(nullptr, nullptr, 0);.")]),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("reset")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"bufferinputstream-read"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-read"}},[t._v("#")]),t._v(" BufferInputStream::read")]),t._v(" "),e("p",[t._v("Read data from stream. "),e("br"),t._v(" It is a legal case if return result < count. Caller should handle this! "),e("em",[t._v("Calls to this method are always NON-BLOCKING")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" data - buffer to read data to. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count - size of the buffer. ")]),e("li",[e("strong",[t._v("@param")]),t._v(" action - async specific action. If action is NOT "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#action-type-none"}},[t._v("oatpp::async::Action::TYPE_NONE")]),t._v(", then caller MUST return this action on coroutine iteration. ")],1),e("li",[e("strong",[t._v("@return")]),t._v(" - actual number of bytes read. 0 - designates end of the buffer. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" async"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Action"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferinputstream-setinputstreamiomode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-setinputstreamiomode"}},[t._v("#")]),t._v(" BufferInputStream::setInputStreamIOMode")]),t._v(" "),e("p",[t._v("Set stream I/O mode. "),e("ul",[e("li",[e("strong",[t._v("@throws")])])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInputStreamIOMode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IOMode ioMode"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferinputstream-getinputstreamiomode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-getinputstreamiomode"}},[t._v("#")]),t._v(" BufferInputStream::getInputStreamIOMode")]),t._v(" "),e("p",[t._v("Get stream I/O mode. "),e("ul",[e("li",[e("strong",[t._v("@return")])])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("IOMode "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInputStreamIOMode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferinputstream-getinputstreamcontext"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-getinputstreamcontext"}},[t._v("#")]),t._v(" BufferInputStream::getInputStreamContext")]),t._v(" "),e("p",[t._v("Get stream context. "),e("ul",[e("li",[e("strong",[t._v("@return")])])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("Context"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInputStreamContext")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferinputstream-getdatamemoryhandle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-getdatamemoryhandle"}},[t._v("#")]),t._v(" BufferInputStream::getDataMemoryHandle")]),t._v(" "),e("p",[t._v("Get data memory handle. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" - data memory handle. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDataMemoryHandle")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferinputstream-getdata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-getdata"}},[t._v("#")]),t._v(" BufferInputStream::getData")]),t._v(" "),e("p",[t._v("Get pointer to data. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" - pointer to data. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("p_char8 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferinputstream-getdatasize"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-getdatasize"}},[t._v("#")]),t._v(" BufferInputStream::getDataSize")]),t._v(" "),e("p",[t._v("Get data size. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" - data size. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_buff_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDataSize")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferinputstream-getcurrentposition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-getcurrentposition"}},[t._v("#")]),t._v(" BufferInputStream::getCurrentPosition")]),t._v(" "),e("p",[t._v("Get current data read position. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" - current data read position. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_buff_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrentPosition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferinputstream-setcurrentposition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-setcurrentposition"}},[t._v("#")]),t._v(" BufferInputStream::setCurrentPosition")]),t._v(" "),e("p",[t._v("Set current data read position. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" position - data read position. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCurrentPosition")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size position"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"bufferinputstream-peek"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-peek"}},[t._v("#")]),t._v(" BufferInputStream::peek")]),t._v(" "),e("p",[t._v("Peek up to count of bytes int he buffer "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" data ")]),e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@return")]),t._v(" [1..count], IOErrors. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("peek")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" async"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Action"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" action"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferinputstream-availabletoread"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-availabletoread"}},[t._v("#")]),t._v(" BufferInputStream::availableToRead")]),t._v(" "),e("p",[t._v("Amount of bytes currently available to read from buffer. "),e("ul",[e("li",[e("strong",[t._v("@return")]),t._v(" "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/IODefinitions/#v-io-size"}},[t._v("oatpp::v_io_size")]),t._v(". ")],1)])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("availableToRead")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bufferinputstream-commitreadoffset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bufferinputstream-commitreadoffset"}},[t._v("#")]),t._v(" BufferInputStream::commitReadOffset")]),t._v(" "),e("p",[t._v("Commit read offset "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" count ")]),e("li",[e("strong",[t._v("@return")]),t._v(" [1..count], IOErrors. ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[t._v("v_io_size "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("commitReadOffset")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);