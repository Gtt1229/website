(window.webpackJsonp=window.webpackJsonp||[]).push([[264],{636:function(t,e,r){"use strict";r.r(e);var a=r(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"httpconnectionhandler-hpp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler-hpp"}},[t._v("#")]),t._v(" HttpConnectionHandler.hpp"),r("seo")],1),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/web/server/HttpConnectionHandler.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),r("OutboundLink")],1),r("br"),t._v(" "),r("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/web/server/HttpConnectionHandler.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("code",[t._v("API: latest")]),r("br"),t._v(" "),r("code",[t._v("module: oatpp")]),r("br"),t._v(" "),r("code",[t._v('#include "oatpp/web/server/HttpConnectionHandler.hpp"')])]),t._v(" "),r("h2",{attrs:{id:"httpconnectionhandler"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler"}},[t._v("#")]),t._v(" HttpConnectionHandler")]),t._v(" "),r("p",[t._v("Simple ConnectionHandler ("),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/ConnectionHandler/#connectionhandler"}},[t._v("oatpp::network::ConnectionHandler")]),t._v(") for handling HTTP communication. "),r("br"),t._v(" Will create one thread per each connection to handle communication.")],1),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" web "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" server "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpConnectionHandler")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" base"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Countable"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" network"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ConnectionHandler"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" HttpProcessor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("TaskProcessingListener "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("h3",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("Return Type")]),t._v(" "),r("th",[t._v("Name")]),t._v(" "),r("th",[t._v("Summary")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[r("code",[t._v("[none]")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#httpconnectionhandler-httpconnectionhandler"}},[t._v("HttpConnectionHandler")])]),t._v(" "),r("td",[t._v("Multiple implementations: "),r("br"),r("ol",[r("li",[t._v("Constructor. ")]),r("li",[t._v("Constructor. ")]),r("li",[t._v("Constructor. ")])])])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("std::shared_ptr<HttpConnectionHandler>")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#httpconnectionhandler-createshared"}},[t._v("createShared")])]),t._v(" "),r("td",[t._v("Create shared HttpConnectionHandler.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("void")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#httpconnectionhandler-seterrorhandler"}},[t._v("setErrorHandler")])]),t._v(" "),r("td",[t._v("Set root error handler for all requests coming through this Connection Handler.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("void")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#httpconnectionhandler-addrequestinterceptor"}},[t._v("addRequestInterceptor")])]),t._v(" "),r("td",[t._v("Add request interceptor. Request interceptors are called before routing happens.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("void")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#httpconnectionhandler-addresponseinterceptor"}},[t._v("addResponseInterceptor")])]),t._v(" "),r("td",[t._v("Add response interceptor.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("void")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#httpconnectionhandler-handleconnection"}},[t._v("handleConnection")])]),t._v(" "),r("td",[t._v("Implementation of "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/ConnectionHandler/#connectionhandler-handleconnection"}},[t._v("oatpp::network::ConnectionHandler::handleConnection()")]),t._v(".")],1)]),t._v(" "),r("tr",[r("td",[r("code",[t._v("void")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#httpconnectionhandler-stop"}},[t._v("stop")])]),t._v(" "),r("td",[t._v("Tell all worker threads to exit when done.")])]),t._v(" "),r("tr",[r("td",[r("code",[t._v("v_uint64")])]),t._v(" "),r("td",[r("a",{attrs:{href:"#httpconnectionhandler-getconnectionscount"}},[t._v("getConnectionsCount")])]),t._v(" "),r("td",[t._v("Get connections count.")])])])]),t._v(" "),r("h3",{attrs:{id:"httpconnectionhandler-httpconnectionhandler"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler-httpconnectionhandler"}},[t._v("#")]),t._v(" HttpConnectionHandler::HttpConnectionHandler")]),t._v(" "),r("ol",[r("li",[t._v("Constructor. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" components - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/web/server/HttpProcessor/#httpprocessor-components"}},[t._v("oatpp::web::server::HttpProcessor::Components")]),t._v(". ")],1)]),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("HttpConnectionHandler")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HttpProcessor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Components"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" components"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),r("li",[t._v("Constructor. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" router - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/web/server/HttpRouter/#httprouter"}},[t._v("oatpp::web::server::HttpRouter")]),t._v(" to route incoming requests. ")],1)]),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("HttpConnectionHandler")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HttpRouter"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" router"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("HttpConnectionHandler")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("make_shared"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HttpProcessor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Components"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("router"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),r("li",[t._v("Constructor. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" router - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/web/server/HttpRouter/#httprouter"}},[t._v("oatpp::web::server::HttpRouter")]),t._v(" to route incoming requests. ")],1),r("li",[r("strong",[t._v("@param")]),t._v(" config - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/web/server/HttpProcessor/#httpprocessor-config"}},[t._v("oatpp::web::server::HttpProcessor::Config")]),t._v(". ")],1)]),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("HttpConnectionHandler")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HttpRouter"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" router"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                      "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HttpProcessor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Config"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" config"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("HttpConnectionHandler")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("make_shared"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HttpProcessor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Components"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("router"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" config"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),r("h3",{attrs:{id:"httpconnectionhandler-createshared"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler-createshared"}},[t._v("#")]),t._v(" HttpConnectionHandler::createShared")]),t._v(" "),r("p",[t._v("Create shared HttpConnectionHandler. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" router - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/web/server/HttpRouter/#httprouter"}},[t._v("oatpp::web::server::HttpRouter")]),t._v(" to route incoming requests. ")],1),r("li",[r("strong",[t._v("@return")]),t._v(" - "),r("code",[t._v("std::shared_ptr")]),t._v(" to HttpConnectionHandler. ")])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HttpConnectionHandler"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("createShared")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("HttpRouter"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" router"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"httpconnectionhandler-seterrorhandler"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler-seterrorhandler"}},[t._v("#")]),t._v(" HttpConnectionHandler::setErrorHandler")]),t._v(" "),r("p",[t._v("Set root error handler for all requests coming through this Connection Handler. All unhandled errors will be handled by this error handler. "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" errorHandler - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/web/server/handler/ErrorHandler/#errorhandler"}},[t._v("oatpp::web::server::handler::ErrorHandler")]),t._v(". ")],1)])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("setErrorHandler")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("handler"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ErrorHandler"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" errorHandler"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"httpconnectionhandler-addrequestinterceptor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler-addrequestinterceptor"}},[t._v("#")]),t._v(" HttpConnectionHandler::addRequestInterceptor")]),t._v(" "),r("p",[t._v("Add request interceptor. Request interceptors are called before routing happens. If multiple interceptors set then the order of interception is the same as the order of calls to "),r("code",[t._v("addRequestInterceptor")]),t._v(". "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" interceptor - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/web/server/interceptor/RequestInterceptor/#requestinterceptor"}},[t._v("oatpp::web::server::interceptor::RequestInterceptor")]),t._v(". ")],1)])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("addRequestInterceptor")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("interceptor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("RequestInterceptor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" interceptor"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"httpconnectionhandler-addresponseinterceptor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler-addresponseinterceptor"}},[t._v("#")]),t._v(" HttpConnectionHandler::addResponseInterceptor")]),t._v(" "),r("p",[t._v("Add response interceptor. If multiple interceptors set then the order of interception is the same as the order of calls to "),r("code",[t._v("addResponseInterceptor")]),t._v(". "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" interceptor - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/web/server/interceptor/RequestInterceptor/#requestinterceptor"}},[t._v("oatpp::web::server::interceptor::RequestInterceptor")]),t._v(". ")],1)])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("addResponseInterceptor")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("interceptor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ResponseInterceptor"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" interceptor"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),r("h3",{attrs:{id:"httpconnectionhandler-handleconnection"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler-handleconnection"}},[t._v("#")]),t._v(" HttpConnectionHandler::handleConnection")]),t._v(" "),r("p",[t._v("Implementation of "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/network/ConnectionHandler/#connectionhandler-handleconnection"}},[t._v("oatpp::network::ConnectionHandler::handleConnection()")]),t._v(". "),r("ul",[r("li",[r("strong",[t._v("@param")]),t._v(" connection - "),r("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#iostream"}},[t._v("oatpp::data::stream::IOStream")]),t._v(" representing connection. ")],1)])],1),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleConnection")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" provider"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("ResourceHandle"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("IOStream"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" connection"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                      "),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ParameterMap"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" params"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),r("h3",{attrs:{id:"httpconnectionhandler-stop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler-stop"}},[t._v("#")]),t._v(" HttpConnectionHandler::stop")]),t._v(" "),r("p",[t._v("Tell all worker threads to exit when done.")]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[r("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),r("h3",{attrs:{id:"httpconnectionhandler-getconnectionscount"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#httpconnectionhandler-getconnectionscount"}},[t._v("#")]),t._v(" HttpConnectionHandler::getConnectionsCount")]),t._v(" "),r("p",[t._v("Get connections count. "),r("ul",[r("li",[r("strong",[t._v("@return")])])])]),t._v(" "),r("div",{staticClass:"language-cpp extra-class"},[r("pre",{pre:!0,attrs:{class:"language-cpp"}},[r("code",[t._v("v_uint64 "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("getConnectionsCount")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);