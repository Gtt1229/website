(window.webpackJsonp=window.webpackJsonp||[]).push([[194],{566:function(t,s,a){"use strict";a.r(s);var r=a(42),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"conversionutils-hpp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conversionutils-hpp"}},[t._v("#")]),t._v(" ConversionUtils.hpp"),a("seo")],1),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/core/utils/ConversionUtils.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/core/utils/ConversionUtils.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("API: latest")]),a("br"),t._v(" "),a("code",[t._v("module: oatpp")]),a("br"),t._v(" "),a("code",[t._v('#include "oatpp/core/utils/ConversionUtils.hpp"')])]),t._v(" "),a("h2",{attrs:{id:"strtoint32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtoint32"}},[t._v("#")]),t._v(" strToInt32")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 32-bit integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToInt32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 32-bit integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToInt32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtoint32-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtoint32-2"}},[t._v("#")]),t._v(" strToInt32")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 32-bit integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToInt32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 32-bit integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToInt32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtouint32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtouint32"}},[t._v("#")]),t._v(" strToUInt32")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 32-bit unsigned integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit unsigned integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_uint32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToUInt32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 32-bit unsigned integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit unsigned integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_uint32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToUInt32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtouint32-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtouint32-2"}},[t._v("#")]),t._v(" strToUInt32")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 32-bit unsigned integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit unsigned integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_uint32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToUInt32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 32-bit unsigned integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit unsigned integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_uint32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToUInt32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtoint64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtoint64"}},[t._v("#")]),t._v(" strToInt64")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 64-bit integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToInt64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 64-bit integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToInt64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtoint64-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtoint64-2"}},[t._v("#")]),t._v(" strToInt64")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 64-bit integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToInt64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 64-bit integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToInt64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtouint64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtouint64"}},[t._v("#")]),t._v(" strToUInt64")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 64-bit unsigned integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit unsigned integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_uint64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToUInt64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 64-bit unsigned integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit unsigned integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_uint64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToUInt64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtouint64-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtouint64-2"}},[t._v("#")]),t._v(" strToUInt64")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 64-bit unsigned integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit unsigned integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_uint64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToUInt64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 64-bit unsigned integer. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit unsigned integer value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_uint64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToUInt64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"int32tocharsequence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int32tocharsequence"}},[t._v("#")]),t._v(" int32ToCharSequence")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 32-bit integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 32-bit integer value. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" data - buffer to write data to. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" n - buffer size. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - length of the resultant string. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_buff_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int32ToCharSequence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_int32 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p_char8 data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"uint32tocharsequence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uint32tocharsequence"}},[t._v("#")]),t._v(" uint32ToCharSequence")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 32-bit unsigned integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 32-bit unsigned integer value. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" data - buffer to write data to. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" n - buffer size. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - length of the resultant string. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_buff_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uint32ToCharSequence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_uint32 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p_char8 data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"int64tocharsequence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int64tocharsequence"}},[t._v("#")]),t._v(" int64ToCharSequence")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 64-bit integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 64-bit integer value. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" data - buffer to write data to. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" n - buffer size. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - length of the resultant string. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_buff_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int64ToCharSequence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_int64 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p_char8 data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"uint64tocharsequence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uint64tocharsequence"}},[t._v("#")]),t._v(" uint64ToCharSequence")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 64-bit unsigned integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 64-bit unsigned integer value. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" data - buffer to write data to. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" n - buffer size. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - length of the resultant string. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_buff_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uint64ToCharSequence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_uint64 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p_char8 data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"int32tostr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int32tostr"}},[t._v("#")]),t._v(" int32ToStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 32-bit integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 32-bit integer value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("oatpp::String")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int32ToStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_int32 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"uint32tostr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uint32tostr"}},[t._v("#")]),t._v(" uint32ToStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 32-bit unsigned integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 32-bit unsigned integer value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("oatpp::String")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uint32ToStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_uint32 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"int64tostr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int64tostr"}},[t._v("#")]),t._v(" int64ToStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 64-bit integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 64-bit integer value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("oatpp::String")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int64ToStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_int64 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"uint64tostr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uint64tostr"}},[t._v("#")]),t._v(" uint64ToStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 64-bit unsigned integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 64-bit unsigned integer value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("oatpp::String")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uint64ToStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_uint64 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"int32tostdstr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int32tostdstr"}},[t._v("#")]),t._v(" int32ToStdStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 32-bit integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 32-bit integer value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("std::string")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int32ToStdStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_int32 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"uint32tostdstr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uint32tostdstr"}},[t._v("#")]),t._v(" uint32ToStdStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 32-bit unsigned integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 32-bit unsigned integer value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("std::string")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uint32ToStdStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_uint32 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"int64tostdstr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#int64tostdstr"}},[t._v("#")]),t._v(" int64ToStdStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 64-bit integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 64-bit integer value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("std::string")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("int64ToStdStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_int64 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"uint64tostdstr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#uint64tostdstr"}},[t._v("#")]),t._v(" uint64ToStdStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 64-bit unsigned integer to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 64-bit unsigned integer value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("std::string")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("uint64ToStdStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_uint64 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"primitivetocharsequence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#primitivetocharsequence"}},[t._v("#")]),t._v(" primitiveToCharSequence")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Write value of primitive type (int, float, etc.) as it's string representation with pattern. "),a("ul",[a("li",[a("strong",[t._v("@tparam")]),t._v(" T - primitive value type (int, float, etc.). ")]),a("li",[a("strong",[t._v("@param")]),t._v(" value - actual value. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" data - buffer to write data to. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" n - buffer size. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" pattern - pattern as for "),a("code",[t._v("snprintf")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - length of the resultant string. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nv_buff_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("primitiveToCharSequence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p_char8 data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"primitivetostr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#primitivetostr"}},[t._v("#")]),t._v(" primitiveToStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Write value of primitive type (int, float, etc.) as it's string representation with pattern. "),a("ul",[a("li",[a("strong",[t._v("@tparam")]),t._v(" T - primitive value type (int, float, etc.). ")]),a("li",[a("strong",[t._v("@param")]),t._v(" value - actual value. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" pattern - pattern as for "),a("code",[t._v("sprintf")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - length of the resultant string. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("template")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typename")]),t._v(" T"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\noatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("primitiveToStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("T value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" pattern"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"strtofloat32"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtofloat32"}},[t._v("#")]),t._v(" strToFloat32")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 32-bit float. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit float value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_float32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToFloat32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 32-bit float. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit float value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_float32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToFloat32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtofloat32-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtofloat32-2"}},[t._v("#")]),t._v(" strToFloat32")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 32-bit float. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit float value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_float32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToFloat32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 32-bit float. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 32-bit float value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_float32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToFloat32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtofloat64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtofloat64"}},[t._v("#")]),t._v(" strToFloat64")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 64-bit float. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit float value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_float64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToFloat64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 64-bit float. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit float value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_float64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToFloat64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"strtofloat64-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtofloat64-2"}},[t._v("#")]),t._v(" strToFloat64")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("ol",[a("li",[t._v("String to 64-bit float. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("const char*")]),t._v(". ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit float value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_float64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToFloat64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("String to 64-bit float. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string as "),a("code",[t._v("oatpp::String")]),t._v(". ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - 64-bit float value. ")])]),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_float64 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToFloat64")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"float32tocharsequence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float32tocharsequence"}},[t._v("#")]),t._v(" float32ToCharSequence")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 32-bit float to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 32-bit float value. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" data - buffer to write data to. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" n - buffer size. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - length of the resultant string. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_buff_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float32ToCharSequence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_float32 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p_char8 data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" format "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OATPP_FLOAT_STRING_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"float64tocharsequence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float64tocharsequence"}},[t._v("#")]),t._v(" float64ToCharSequence")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 64-bit float to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 64-bit float value. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" data - buffer to write data to. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" n - buffer size. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - length of the resultant string. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_buff_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64ToCharSequence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_float64 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p_char8 data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" format "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OATPP_FLOAT_STRING_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"float32tostr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float32tostr"}},[t._v("#")]),t._v(" float32ToStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 32-bit float to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 32-bit float value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("oatpp::String")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float32ToStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_float32 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" format "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OATPP_FLOAT_STRING_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"float64tostr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#float64tostr"}},[t._v("#")]),t._v(" float64ToStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert 64-bit float to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - 64-bit float value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("oatpp::String")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("float64ToStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_float64 value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" format "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" OATPP_FLOAT_STRING_FORMAT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"booltostr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#booltostr"}},[t._v("#")]),t._v(" boolToStr")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("Convert boolean to it's string representation. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" value - boolean value. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - value as "),a("code",[t._v("oatpp::String")]),t._v("; ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("boolToStr")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"strtobool"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strtobool"}},[t._v("#")]),t._v(" strToBool")]),t._v(" "),a("p",[a("strong",[t._v("Namespace:")]),t._v(" "),a("code",[t._v("oatpp::utils::conversion")])]),t._v(" "),a("p",[t._v("parse string to boolean value. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" str - string to parse. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" success - out parameter. "),a("code",[t._v("true")]),t._v(" if operation was successful. "),a("code",[t._v("false")]),t._v(" otherwise. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - boolean value. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("strToBool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" success"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);