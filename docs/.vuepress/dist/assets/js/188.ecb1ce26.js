(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{560:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"caret-hpp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-hpp"}},[t._v("#")]),t._v(" Caret.hpp"),s("seo")],1),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/core/parser/Caret.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),s("OutboundLink")],1),s("br"),t._v(" "),s("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/core/parser/Caret.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("API: latest")]),s("br"),t._v(" "),s("code",[t._v("module: oatpp")]),s("br"),t._v(" "),s("code",[t._v('#include "oatpp/core/parser/Caret.hpp"')])]),t._v(" "),s("h2",{attrs:{id:"caret"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret"}},[t._v("#")]),t._v(" Caret")]),t._v(" "),s("p",[t._v("Helper class to do parsing operations")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" parser "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Caret")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"methods"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Return Type")]),t._v(" "),s("th",[t._v("Name")]),t._v(" "),s("th",[t._v("Summary")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("const char*")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-getdata"}},[t._v("getData")])]),t._v(" "),s("td",[t._v("Get pointer to a data, passed to Caret constructor")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("const char*")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-getcurrdata"}},[t._v("getCurrData")])]),t._v(" "),s("td",[t._v("Same as getData()[position]")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_buff_size")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-getdatasize"}},[t._v("getDataSize")])]),t._v(" "),s("td",[t._v("Get size of a data")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("std::shared_ptr<std::string>")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-getdatamemoryhandle"}},[t._v("getDataMemoryHandle")])]),t._v(" "),s("td",[t._v("Get data memoryHandle.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("void")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-setposition"}},[t._v("setPosition")])]),t._v(" "),s("td",[t._v("Set caret position relative to data")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_buff_size")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-getposition"}},[t._v("getPosition")])]),t._v(" "),s("td",[t._v("Get caret position relative to data")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("void")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-seterror"}},[t._v("setError")])]),t._v(" "),s("td",[t._v("Set error message and error code.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("const char*")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-geterrormessage"}},[t._v("getErrorMessage")])]),t._v(" "),s("td",[t._v("Get error message")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_int64")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-geterrorcode"}},[t._v("getErrorCode")])]),t._v(" "),s("td",[t._v("Get error code")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-haserror"}},[t._v("hasError")])]),t._v(" "),s("td",[t._v("Check if error is set for the Caret")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("void")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-clearerror"}},[t._v("clearError")])]),t._v(" "),s("td",[t._v("Clear error message and error code")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Label")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-putlabel"}},[t._v("putLabel")])]),t._v(" "),s("td",[t._v("Create Label(this);")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("void")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-inc"}},[t._v("inc")])]),t._v(" "),s("td",[t._v("Multiple implementations: "),s("br"),s("ol",[s("li",[t._v("Increase caret position by one ")]),s("li",[t._v("Increase caret position by amount ")])])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-skipblankchars"}},[t._v("skipBlankChars")])]),t._v(" "),s("td",[t._v("Skip chars: [' ', '\\t', '\\n', '\\r','\\f']")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-skipchar"}},[t._v("skipChar")])]),t._v(" "),s("td",[t._v("Skip char")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-findchar"}},[t._v("findChar")])]),t._v(" "),s("td",[t._v("Find char. Position will be set to a found char. If")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-skipcharsfromset"}},[t._v("skipCharsFromSet")])]),t._v(" "),s("td",[t._v("Multiple implementations: "),s("br"),s("ol",[s("li",[t._v("Skip chars defined by set. ")]),s("li",[t._v("Skip chars defined by set. ")])])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_buff_size")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-findcharfromset"}},[t._v("findCharFromSet")])]),t._v(" "),s("td",[t._v("Multiple implementations: "),s("br"),s("ol",[s("li",[t._v("Find one of chars defined by set. ")]),s("li",[t._v("Find one of chars defined by set. ")])])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-findrn"}},[t._v("findRN")])]),t._v(" "),s("td",[t._v('Find "\\r\\n" chars')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-skiprn"}},[t._v("skipRN")])]),t._v(" "),s("td",[t._v('Skip "\\r\\n"')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-isatrn"}},[t._v("isAtRN")])]),t._v(" "),s("td",[t._v('Check if caret at "\\r\\n" chars')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-findrorn"}},[t._v("findROrN")])]),t._v(" "),s("td",[t._v("Find '\\r' char of '\\n' char")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-skiprnorn"}},[t._v("skipRNOrN")])]),t._v(" "),s("td",[t._v('if at "\\r\\n" - skip.')])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-skipallrsandns"}},[t._v("skipAllRsAndNs")])]),t._v(" "),s("td",[t._v("skip any sequence of '\\r' and '\\n'")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_int64")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-parseint"}},[t._v("parseInt")])]),t._v(" "),s("td",[t._v("parse integer value starting from the current position.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_uint64")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-parseunsignedint"}},[t._v("parseUnsignedInt")])]),t._v(" "),s("td",[t._v("parse integer value starting from the current position.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_float32")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-parsefloat32"}},[t._v("parseFloat32")])]),t._v(" "),s("td",[t._v("parse float value starting from the current position.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_float64")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-parsefloat64"}},[t._v("parseFloat64")])]),t._v(" "),s("td",[t._v("parse float value starting from the current position.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-isattext"}},[t._v("isAtText")])]),t._v(" "),s("td",[t._v("Multiple implementations: "),s("br"),s("ol",[s("li",[t._v("Check if follows text ")]),s("li",[t._v("Check if follows text ")])])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-isattextncs"}},[t._v("isAtTextNCS")])]),t._v(" "),s("td",[t._v("Multiple implementations: "),s("br"),s("ol",[s("li",[t._v("Check if follows text (Not Case Sensitive) ")]),s("li",[t._v("Check if follows text (Not Case Sensitive) ")])])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Label")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-parsestringenclosed"}},[t._v("parseStringEnclosed")])]),t._v(" "),s("td",[t._v("Parse enclosed string.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-findtext"}},[t._v("findText")])]),t._v(" "),s("td",[t._v("Multiple implementations: "),s("br"),s("ol",[s("li",[t._v("Find text and set position to found text ")]),s("li",[t._v("Find text and set position to found text ")])])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-isatcharfromset"}},[t._v("isAtCharFromSet")])]),t._v(" "),s("td",[t._v("Multiple implementations: "),s("br"),s("ol",[s("li",[t._v("Check if caret is at char defined by set ")]),s("li",[t._v("Check if caret is at char defined by set ")])])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-isatchar"}},[t._v("isAtChar")])]),t._v(" "),s("td",[t._v("Check if caret is at char")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-isatblankchar"}},[t._v("isAtBlankChar")])]),t._v(" "),s("td",[t._v("Check if caret is at one of chars [' ', '\\t', '\\n', '\\r','\\f']")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-isatdigitchar"}},[t._v("isAtDigitChar")])]),t._v(" "),s("td",[t._v("Check if caret is at digit")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-cancontinueatchar"}},[t._v("canContinueAtChar")])]),t._v(" "),s("td",[t._v("Multiple implementations: "),s("br"),s("ol",[s("li",[t._v("Check if caret is at char, and no error is set ")]),s("li",[t._v("Check if caret is at char, and no error is set. ")])])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-cancontinue"}},[t._v("canContinue")])]),t._v(" "),s("td",[t._v("Check if caret position < dataSize and not error is set")])])])]),t._v(" "),s("h3",{attrs:{id:"caret-getdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-getdata"}},[t._v("#")]),t._v(" Caret::getData")]),t._v(" "),s("p",[t._v("Get pointer to a data, passed to Caret constructor "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-getcurrdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-getcurrdata"}},[t._v("#")]),t._v(" Caret::getCurrData")]),t._v(" "),s("p",[t._v("Same as getData()[position] "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getCurrData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-getdatasize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-getdatasize"}},[t._v("#")]),t._v(" Caret::getDataSize")]),t._v(" "),s("p",[t._v("Get size of a data "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_buff_size "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDataSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-getdatamemoryhandle"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-getdatamemoryhandle"}},[t._v("#")]),t._v(" Caret::getDataMemoryHandle")]),t._v(" "),s("p",[t._v("Get data memoryHandle. "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDataMemoryHandle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-setposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-setposition"}},[t._v("#")]),t._v(" Caret::setPosition")]),t._v(" "),s("p",[t._v("Set caret position relative to data "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" position ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPosition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size position"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-getposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-getposition"}},[t._v("#")]),t._v(" Caret::getPosition")]),t._v(" "),s("p",[t._v("Get caret position relative to data "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_buff_size "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPosition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-seterror"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-seterror"}},[t._v("#")]),t._v(" Caret::setError")]),t._v(" "),s("p",[t._v("Set error message and error code. Note that once error message is set, methods canContinue... will return false "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" errorMessage ")]),s("li",[s("strong",[t._v("@param")]),t._v(" errorCode ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" errorMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_int64 errorCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-geterrormessage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-geterrormessage"}},[t._v("#")]),t._v(" Caret::getErrorMessage")]),t._v(" "),s("p",[t._v("Get error message "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" error message ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getErrorMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-geterrorcode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-geterrorcode"}},[t._v("#")]),t._v(" Caret::getErrorCode")]),t._v(" "),s("p",[t._v("Get error code "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" error code ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_int64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getErrorCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-haserror"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-haserror"}},[t._v("#")]),t._v(" Caret::hasError")]),t._v(" "),s("p",[t._v("Check if error is set for the Caret "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-clearerror"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-clearerror"}},[t._v("#")]),t._v(" Caret::clearError")]),t._v(" "),s("p",[t._v("Clear error message and error code")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearError")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-putlabel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-putlabel"}},[t._v("#")]),t._v(" Caret::putLabel")]),t._v(" "),s("p",[t._v("Create Label(this); "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" Label ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("Label "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("putLabel")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-inc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-inc"}},[t._v("#")]),t._v(" Caret::inc")]),t._v(" "),s("ol",[s("li",[t._v("Increase caret position by one"),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Increase caret position by amount "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" amount ")])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_buff_size amount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"caret-skipblankchars"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-skipblankchars"}},[t._v("#")]),t._v(" Caret::skipBlankChars")]),t._v(" "),s("p",[t._v("Skip chars: [' ', '\\t', '\\n', '\\r','\\f'] "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" true if other char found ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skipBlankChars")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-skipchar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-skipchar"}},[t._v("#")]),t._v(" Caret::skipChar")]),t._v(" "),s("p",[t._v("Skip char "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" c ")]),s("li",[s("strong",[t._v("@return")]),t._v(" true if other char found ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skipChar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_char8 c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-findchar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-findchar"}},[t._v("#")]),t._v(" Caret::findChar")]),t._v(" "),s("p",[t._v("Find char. Position will be set to a found char. If no such char found - position will be set to a dataSize; "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" c ")]),s("li",[s("strong",[t._v("@return")]),t._v(" true if found ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findChar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_char8 c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-skipcharsfromset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-skipcharsfromset"}},[t._v("#")]),t._v(" Caret::skipCharsFromSet")]),t._v(" "),s("ol",[s("li",[t._v("Skip chars defined by set. ex. skipCharsFromSet(\"abc\") - will skip all 'a', 'b', 'c' chars "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" set ")]),s("li",[s("strong",[t._v("@return")]),t._v(" true if other char found ")])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skipCharsFromSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Skip chars defined by set. ex. skipCharsFromSet(\"abc\", 3) - will skip all 'a', 'b', 'c' chars "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" set ")]),s("li",[s("strong",[t._v("@param")]),t._v(" setSize ")]),s("li",[s("strong",[t._v("@return")]),t._v(" true if other char found ")])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skipCharsFromSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size setSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"caret-findcharfromset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-findcharfromset"}},[t._v("#")]),t._v(" Caret::findCharFromSet")]),t._v(" "),s("ol",[s("li",[t._v("Find one of chars defined by set. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" set ")]),s("li",[s("strong",[t._v("@return")]),t._v(" char found or -1 if no char found ")])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_buff_size "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findCharFromSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Find one of chars defined by set. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" set ")]),s("li",[s("strong",[t._v("@param")]),t._v(" setSize ")]),s("li",[s("strong",[t._v("@return")]),t._v(" char found or -1 if no char found ")])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_buff_size "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findCharFromSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size setSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"caret-findrn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-findrn"}},[t._v("#")]),t._v(" Caret::findRN")]),t._v(" "),s("p",[t._v('Find "\\r\\n" chars '),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" true if found ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findRN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-skiprn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-skiprn"}},[t._v("#")]),t._v(" Caret::skipRN")]),t._v(" "),s("p",[t._v('Skip "\\r\\n" '),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(' True if position changes. False if caret not at "\\r\\n" ')])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skipRN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-isatrn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-isatrn"}},[t._v("#")]),t._v(" Caret::isAtRN")]),t._v(" "),s("p",[t._v('Check if caret at "\\r\\n" chars '),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtRN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-findrorn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-findrorn"}},[t._v("#")]),t._v(" Caret::findROrN")]),t._v(" "),s("p",[t._v("Find '\\r' char of '\\n' char "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" true if found '\\r' or '\\n' ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findROrN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-skiprnorn"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-skiprnorn"}},[t._v("#")]),t._v(" Caret::skipRNOrN")]),t._v(" "),s("p",[t._v('if at "\\r\\n" - skip. if at "\\n" - skip. '),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" true if position changed ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skipRNOrN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-skipallrsandns"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-skipallrsandns"}},[t._v("#")]),t._v(" Caret::skipAllRsAndNs")]),t._v(" "),s("p",[t._v("skip any sequence of '\\r' and '\\n' "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" true if position changed ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("skipAllRsAndNs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-parseint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-parseint"}},[t._v("#")]),t._v(" Caret::parseInt")]),t._v(" "),s("p",[t._v("parse integer value starting from the current position. Using function std::strtol() Warning: position may go out of Caret::getSize() bound. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" base - base is passed to std::strtol function ")]),s("li",[s("strong",[t._v("@return")]),t._v(" parsed value ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_int64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" base "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-parseunsignedint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-parseunsignedint"}},[t._v("#")]),t._v(" Caret::parseUnsignedInt")]),t._v(" "),s("p",[t._v("parse integer value starting from the current position. Using function std::strtoul() Warning: position may go out of Caret::getSize() bound. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" base - base is passed to std::strtoul function ")]),s("li",[s("strong",[t._v("@return")]),t._v(" parsed value ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_uint64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseUnsignedInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" base "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-parsefloat32"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-parsefloat32"}},[t._v("#")]),t._v(" Caret::parseFloat32")]),t._v(" "),s("p",[t._v("parse float value starting from the current position. Using function std::strtof() Warning: position may go out of Caret::getSize() bound. "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" parsed value ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_float32 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-parsefloat64"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-parsefloat64"}},[t._v("#")]),t._v(" Caret::parseFloat64")]),t._v(" "),s("p",[t._v("parse float value starting from the current position. Using function std::strtod() Warning: position may go out of Caret::getSize() bound. "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" parsed value ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_float64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-isattext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-isattext"}},[t._v("#")]),t._v(" Caret::isAtText")]),t._v(" "),s("ol",[s("li",[t._v("Check if follows text "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" text ")]),s("li",[s("strong",[t._v("@param")]),t._v(" skipIfTrue - increase position if true ")]),s("li",[s("strong",[t._v("@return")])])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" skipIfTrue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Check if follows text "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" text ")]),s("li",[s("strong",[t._v("@param")]),t._v(" textSize ")]),s("li",[s("strong",[t._v("@param")]),t._v(" skipIfTrue - increase position if true ")]),s("li",[s("strong",[t._v("@return")])])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size textSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" skipIfTrue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"caret-isattextncs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-isattextncs"}},[t._v("#")]),t._v(" Caret::isAtTextNCS")]),t._v(" "),s("ol",[s("li",[t._v("Check if follows text (Not Case Sensitive) "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" text ")]),s("li",[s("strong",[t._v("@param")]),t._v(" skipIfTrue - increase position if true ")]),s("li",[s("strong",[t._v("@return")])])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtTextNCS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" skipIfTrue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Check if follows text (Not Case Sensitive) "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" text ")]),s("li",[s("strong",[t._v("@param")]),t._v(" textSize ")]),s("li",[s("strong",[t._v("@param")]),t._v(" skipIfTrue - increase position if true ")]),s("li",[s("strong",[t._v("@return")])])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtTextNCS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size textSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" skipIfTrue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"caret-parsestringenclosed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-parsestringenclosed"}},[t._v("#")]),t._v(" Caret::parseStringEnclosed")]),t._v(" "),s("p",[t._v("Parse enclosed string. ex. for data \"'let's go'\" parseStringEnclosed(''', ''', '\\') will return Label to \"let's go\" without enclosing ''' chars "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" openChar ")]),s("li",[s("strong",[t._v("@param")]),t._v(" closeChar ")]),s("li",[s("strong",[t._v("@param")]),t._v(" escapeChar ")]),s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("Label "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseStringEnclosed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" openChar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" closeChar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" escapeChar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-findtext"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-findtext"}},[t._v("#")]),t._v(" Caret::findText")]),t._v(" "),s("ol",[s("li",[t._v("Find text and set position to found text "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" text ")]),s("li",[s("strong",[t._v("@return")]),t._v(" true if found ")])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Find text and set position to found text "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" text ")]),s("li",[s("strong",[t._v("@param")]),t._v(" textSize ")]),s("li",[s("strong",[t._v("@return")]),t._v(" true if found ")])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size textSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"caret-isatcharfromset"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-isatcharfromset"}},[t._v("#")]),t._v(" Caret::isAtCharFromSet")]),t._v(" "),s("ol",[s("li",[t._v("Check if caret is at char defined by set ex. isAtCharFromSet(\"abc\") - will return true for 'a', 'b', 'c' chars "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" set ")]),s("li",[s("strong",[t._v("@return")])])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtCharFromSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Check if caret is at char defined by set ex. isAtCharFromSet(\"abc\", 3) - will return true for 'a', 'b', 'c' chars "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" set ")]),s("li",[s("strong",[t._v("@param")]),t._v(" setSize ")]),s("li",[s("strong",[t._v("@return")])])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtCharFromSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size setSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"caret-isatchar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-isatchar"}},[t._v("#")]),t._v(" Caret::isAtChar")]),t._v(" "),s("p",[t._v("Check if caret is at char "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" c ")]),s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtChar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_char8 c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-isatblankchar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-isatblankchar"}},[t._v("#")]),t._v(" Caret::isAtBlankChar")]),t._v(" "),s("p",[t._v("Check if caret is at one of chars [' ', '\\t', '\\n', '\\r','\\f'] "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtBlankChar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-isatdigitchar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-isatdigitchar"}},[t._v("#")]),t._v(" Caret::isAtDigitChar")]),t._v(" "),s("p",[t._v("Check if caret is at digit "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAtDigitChar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-cancontinueatchar"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-cancontinueatchar"}},[t._v("#")]),t._v(" Caret::canContinueAtChar")]),t._v(" "),s("ol",[s("li",[t._v("Check if caret is at char, and no error is set "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" c ")]),s("li",[s("strong",[t._v("@return")])])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("canContinueAtChar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_char8 c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])])]),t._v(" "),s("li",[t._v("Check if caret is at char, and no error is set. If true inc position by skipChars "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" c ")]),s("li",[s("strong",[t._v("@param")]),t._v(" skipChars ")]),s("li",[s("strong",[t._v("@return")])])]),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("canContinueAtChar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v_char8 c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v_buff_size skipChars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),s("h3",{attrs:{id:"caret-cancontinue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-cancontinue"}},[t._v("#")]),t._v(" Caret::canContinue")]),t._v(" "),s("p",[t._v("Check if caret position < dataSize and not error is set "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("canContinue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v("\n")])])]),s("h2",{attrs:{id:"caret-label"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label"}},[t._v("#")]),t._v(" Caret::Label")]),t._v(" "),s("p",[t._v("Class to label parsing data.")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" parser "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Caret")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Label")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"methods-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods-2"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Return Type")]),t._v(" "),s("th",[t._v("Name")]),t._v(" "),s("th",[t._v("Summary")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("[none]")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-label-label"}},[t._v("Label")])]),t._v(" "),s("td",[t._v("Constructor.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("void")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-label-start"}},[t._v("start")])]),t._v(" "),s("td",[t._v("Set current caret position as a starting point for label.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("void")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-label-end"}},[t._v("end")])]),t._v(" "),s("td",[t._v("Fix current caret position as an end point for label.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("const char*")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-label-getdata"}},[t._v("getData")])]),t._v(" "),s("td",[t._v("Get pointer to a labeled data.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_buff_size")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-label-getsize"}},[t._v("getSize")])]),t._v(" "),s("td",[t._v("Get size of labeled data.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_buff_size")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-label-getstartposition"}},[t._v("getStartPosition")])]),t._v(" "),s("td",[t._v("Get start position of the label.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_buff_size")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-label-getendposition"}},[t._v("getEndPosition")])]),t._v(" "),s("td",[t._v("Get end position of the label.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("oatpp::String")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-label-tostring"}},[t._v("toString")])]),t._v(" "),s("td",[t._v("Same as"),s("code",[t._v("toString(true).")])])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("std::string")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-label-std-str"}},[t._v("std_str")])]),t._v(" "),s("td",[t._v("Create "),s("code",[t._v("std::string")]),t._v(" from labeled data.")])])])]),t._v(" "),s("h3",{attrs:{id:"caret-label-label"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label-label"}},[t._v("#")]),t._v(" Caret::Label::Label")]),t._v(" "),s("p",[t._v("Constructor. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" caret. ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Label")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Caret"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" caret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-label-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label-start"}},[t._v("#")]),t._v(" Caret::Label::start")]),t._v(" "),s("p",[t._v("Set current caret position as a starting point for label.")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-label-end"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label-end"}},[t._v("#")]),t._v(" Caret::Label::end")]),t._v(" "),s("p",[t._v("Fix current caret position as an end point for label.")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-label-getdata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label-getdata"}},[t._v("#")]),t._v(" Caret::Label::getData")]),t._v(" "),s("p",[t._v("Get pointer to a labeled data. "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-label-getsize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label-getsize"}},[t._v("#")]),t._v(" Caret::Label::getSize")]),t._v(" "),s("p",[t._v("Get size of labeled data. "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_buff_size "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-label-getstartposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label-getstartposition"}},[t._v("#")]),t._v(" Caret::Label::getStartPosition")]),t._v(" "),s("p",[t._v("Get start position of the label. "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_buff_size "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getStartPosition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-label-getendposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label-getendposition"}},[t._v("#")]),t._v(" Caret::Label::getEndPosition")]),t._v(" "),s("p",[t._v("Get end position of the label. "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" - end position of the label or "),s("code",[t._v("-1")]),t._v(" if end() wasn't called yet. ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_buff_size "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEndPosition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-label-tostring"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label-tostring"}},[t._v("#")]),t._v(" Caret::Label::toString")]),t._v(" "),s("p",[t._v("Same as"),s("code",[t._v("toString(true).")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" - "),s("RouterLink",{attrs:{to:"/api/latest/oatpp/core/Types/#string"}},[t._v("oatpp::String")]),t._v(". ")],1)])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("oatpp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-label-std-str"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-label-std-str"}},[t._v("#")]),t._v(" Caret::Label::std_str")]),t._v(" "),s("p",[t._v("Create "),s("code",[t._v("std::string")]),t._v(" from labeled data. "),s("ul",[s("li",[s("strong",[t._v("@return")]),t._v(" - "),s("code",[t._v("std::string")]),t._v(". ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("std"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("string "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("std_str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"caret-statesaveguard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-statesaveguard"}},[t._v("#")]),t._v(" Caret::StateSaveGuard")]),t._v(" "),s("p",[t._v("Caret state saver guard.")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" parser "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Caret")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StateSaveGuard")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"methods-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#methods-3"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Return Type")]),t._v(" "),s("th",[t._v("Name")]),t._v(" "),s("th",[t._v("Summary")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("[none]")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-statesaveguard-statesaveguard"}},[t._v("StateSaveGuard")])]),t._v(" "),s("td",[t._v("Constructor.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("[none]")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-statesaveguard-~statesaveguard"}},[t._v("~StateSaveGuard")])]),t._v(" "),s("td",[t._v("Destructor. Restore saved state.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_buff_size")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-statesaveguard-getsavedposition"}},[t._v("getSavedPosition")])]),t._v(" "),s("td",[t._v("Get caret saved position.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("const char*")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-statesaveguard-getsavederrormessage"}},[t._v("getSavedErrorMessage")])]),t._v(" "),s("td",[t._v("Get caret saved error message.")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("v_int64")])]),t._v(" "),s("td",[s("a",{attrs:{href:"#caret-statesaveguard-getsavederrorcode"}},[t._v("getSavedErrorCode")])]),t._v(" "),s("td",[t._v("Get caret saved error code.")])])])]),t._v(" "),s("h3",{attrs:{id:"caret-statesaveguard-statesaveguard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-statesaveguard-statesaveguard"}},[t._v("#")]),t._v(" Caret::StateSaveGuard::StateSaveGuard")]),t._v(" "),s("p",[t._v("Constructor. "),s("ul",[s("li",[s("strong",[t._v("@param")]),t._v(" caret. ")])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StateSaveGuard")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Caret"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" caret"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-statesaveguard-statesaveguard-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-statesaveguard-statesaveguard-2"}},[t._v("#")]),t._v(" Caret::StateSaveGuard::~StateSaveGuard")]),t._v(" "),s("p",[t._v("Destructor. Restore saved state.")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StateSaveGuard")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-statesaveguard-getsavedposition"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-statesaveguard-getsavedposition"}},[t._v("#")]),t._v(" Caret::StateSaveGuard::getSavedPosition")]),t._v(" "),s("p",[t._v("Get caret saved position. "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_buff_size "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSavedPosition")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-statesaveguard-getsavederrormessage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-statesaveguard-getsavederrormessage"}},[t._v("#")]),t._v(" Caret::StateSaveGuard::getSavedErrorMessage")]),t._v(" "),s("p",[t._v("Get caret saved error message. "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSavedErrorMessage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"caret-statesaveguard-getsavederrorcode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#caret-statesaveguard-getsavederrorcode"}},[t._v("#")]),t._v(" Caret::StateSaveGuard::getSavedErrorCode")]),t._v(" "),s("p",[t._v("Get caret saved error code. "),s("ul",[s("li",[s("strong",[t._v("@return")])])])]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("v_int64 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSavedErrorCode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);