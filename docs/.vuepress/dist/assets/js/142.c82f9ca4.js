(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{514:function(s,t,a){"use strict";a.r(t);var r=a(42),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"processor-hpp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-hpp"}},[s._v("#")]),s._v(" Processor.hpp"),a("seo")],1),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/core/async/Processor.hpp",target:"_blank",rel:"noopener noreferrer"}},[s._v("This File On Github"),a("OutboundLink")],1),a("br"),s._v(" "),a("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/core/async/Processor.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[s._v("Ask A Question"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("code",[s._v("API: latest")]),a("br"),s._v(" "),a("code",[s._v("module: oatpp")]),a("br"),s._v(" "),a("code",[s._v('#include "oatpp/core/async/Processor.hpp"')])]),s._v(" "),a("h2",{attrs:{id:"processor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor"}},[s._v("#")]),s._v(" Processor")]),s._v(" "),a("p",[s._v("Asynchronous Processor."),a("br"),s._v(" Responsible for processing and managing multiple Coroutines. Do not use bare processor to run coroutines. Use "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Executor/#executor"}},[s._v("oatpp::async::Executor")]),s._v(" instead;.")],1),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" oatpp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("namespace")]),s._v(" async "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Processor")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h3",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[s._v("#")]),s._v(" Methods")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("Return Type")]),s._v(" "),a("th",[s._v("Name")]),s._v(" "),a("th",[s._v("Summary")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("void")])]),s._v(" "),a("td",[a("a",{attrs:{href:"#processor-addworker"}},[s._v("addWorker")])]),s._v(" "),a("td",[s._v("Add dedicated co-worker to processor.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("void")])]),s._v(" "),a("td",[a("a",{attrs:{href:"#processor-pushonetask"}},[s._v("pushOneTask")])]),s._v(" "),a("td",[s._v("Push one Coroutine back to processor.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("void")])]),s._v(" "),a("td",[a("a",{attrs:{href:"#processor-pushtasks"}},[s._v("pushTasks")])]),s._v(" "),a("td",[s._v("Push list of Coroutines back to processor.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("void")])]),s._v(" "),a("td",[a("a",{attrs:{href:"#processor-execute"}},[s._v("execute")])]),s._v(" "),a("td",[s._v("Execute Coroutine.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("void")])]),s._v(" "),a("td",[a("a",{attrs:{href:"#processor-waitfortasks"}},[s._v("waitForTasks")])]),s._v(" "),a("td",[s._v("Sleep and wait for tasks.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("bool")])]),s._v(" "),a("td",[a("a",{attrs:{href:"#processor-iterate"}},[s._v("iterate")])]),s._v(" "),a("td",[s._v("Iterate Coroutines.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("void")])]),s._v(" "),a("td",[a("a",{attrs:{href:"#processor-stop"}},[s._v("stop")])]),s._v(" "),a("td",[s._v("Stop waiting for new tasks.")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("v_int32")])]),s._v(" "),a("td",[a("a",{attrs:{href:"#processor-gettaskscount"}},[s._v("getTasksCount")])]),s._v(" "),a("td",[s._v("Get number of all not-finished tasks including tasks rescheduled for processor's co-workers.")])])])]),s._v(" "),a("h3",{attrs:{id:"processor-addworker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-addworker"}},[s._v("#")]),s._v(" Processor::addWorker")]),s._v(" "),a("p",[s._v("Add dedicated co-worker to processor. "),a("ul",[a("li",[a("strong",[s._v("@param")]),s._v(" worker - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/worker/Worker/#worker"}},[s._v("oatpp::async::worker::Worker")]),s._v(". ")],1)])]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("addWorker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" std"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("worker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v("Worker"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" worker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"processor-pushonetask"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-pushonetask"}},[s._v("#")]),s._v(" Processor::pushOneTask")]),s._v(" "),a("p",[s._v("Push one Coroutine back to processor. "),a("ul",[a("li",[a("strong",[s._v("@param")]),s._v(" coroutine - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#coroutinehandle"}},[s._v("oatpp::async::CoroutineHandle")]),s._v(" previously popped-out(rescheduled to coworker) from this processor. ")],1)])]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pushOneTask")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CoroutineHandle"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" coroutine"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"processor-pushtasks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-pushtasks"}},[s._v("#")]),s._v(" Processor::pushTasks")]),s._v(" "),a("p",[s._v("Push list of Coroutines back to processor. "),a("ul",[a("li",[a("strong",[s._v("@param")]),s._v(" tasks - oatpp::async::utils::FastQueue of "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#coroutinehandle"}},[s._v("oatpp::async::CoroutineHandle")]),s._v(" previously popped-out(rescheduled to coworker) from this processor. ")],1)])]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pushTasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("utils"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("::")]),s._v("FastQueue"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("CoroutineHandle"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" tasks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"processor-execute"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-execute"}},[s._v("#")]),s._v(" Processor::execute")]),s._v(" "),a("p",[s._v("Execute Coroutine. "),a("ul",[a("li",[a("strong",[s._v("@tparam")]),s._v(" CoroutineType - type of coroutine to execute. ")]),a("li",[a("strong",[s._v("@tparam")]),s._v(" Args - types of arguments to be passed to Coroutine constructor. ")]),a("li",[a("strong",[s._v("@param")]),s._v(" params - actual arguments to be passed to Coroutine constructor. ")])])]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("template")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typename")]),s._v(" CoroutineType"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typename")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" Args"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("execute")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"processor-waitfortasks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-waitfortasks"}},[s._v("#")]),s._v(" Processor::waitForTasks")]),s._v(" "),a("p",[s._v("Sleep and wait for tasks.")]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("waitForTasks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"processor-iterate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-iterate"}},[s._v("#")]),s._v(" Processor::iterate")]),s._v(" "),a("p",[s._v("Iterate Coroutines. "),a("ul",[a("li",[a("strong",[s._v("@param")]),s._v(" numIterations - number of iterations. ")]),a("li",[a("strong",[s._v("@return")]),s._v(" - "),a("code",[s._v("true")]),s._v(" if there are active Coroutines. ")])])]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("bool")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("iterate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v_int32 numIterations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"processor-stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-stop"}},[s._v("#")]),s._v(" Processor::stop")]),s._v(" "),a("p",[s._v("Stop waiting for new tasks.")]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h3",{attrs:{id:"processor-gettaskscount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#processor-gettaskscount"}},[s._v("#")]),s._v(" Processor::getTasksCount")]),s._v(" "),a("p",[s._v("Get number of all not-finished tasks including tasks rescheduled for processor's co-workers. "),a("ul",[a("li",[a("strong",[s._v("@return")]),s._v(" - number of not-finished tasks. ")])])]),s._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[s._v("v_int32 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getTasksCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);