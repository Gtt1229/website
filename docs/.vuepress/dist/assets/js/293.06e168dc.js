(window.webpackJsonp=window.webpackJsonp||[]).push([[293],{665:function(t,a,e){"use strict";e.r(a);var s=e(42),o=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"installation-on-windows"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation-on-windows"}},[t._v("#")]),t._v(" Installation on Windows "),e("seo")],1),t._v(" "),e("h2",{attrs:{id:"requirements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[t._v("#")]),t._v(" Requirements")]),t._v(" "),e("ul",[e("li",[t._v("Microsoft Visual Studio (Tested with Visual Studio 2017)")]),t._v(" "),e("li",[t._v("CMake (Latest version recommended)")]),t._v(" "),e("li",[t._v("Git")])]),t._v(" "),e("h2",{attrs:{id:"install-oat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-oat"}},[t._v("#")]),t._v(" Install Oat++")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/oatpp/oatpp.git\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n$ MD build\n$ "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" build"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n\n$ cmake "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n$ cmake --build "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" --target INSTALL\n")])])]),e("h3",{attrs:{id:"installation-cmake-options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation-cmake-options"}},[t._v("#")]),t._v(" Installation CMake options:")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Option")]),t._v(" "),e("th",[t._v("Default")]),t._v(" "),e("th",[t._v("Description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("CMAKE_BUILD_TYPE")])]),t._v(" "),e("td",[e("code",[t._v("Debug")])]),t._v(" "),e("td",[t._v("Build type.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("BUILD_SHARED_LIBS")])]),t._v(" "),e("td",[e("code",[t._v("OFF")])]),t._v(" "),e("td",[t._v("Leave this option to "),e("code",[t._v("OFF")]),t._v(". Oat++ is meant to be used as a static library.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("OATPP_BUILD_TESTS")])]),t._v(" "),e("td",[e("code",[t._v("ON")])]),t._v(" "),e("td",[t._v("Set it to "),e("code",[t._v("OFF")]),t._v(" to disable tests build.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("OATPP_DISABLE_ENV_OBJECT_COUNTERS")])]),t._v(" "),e("td",[e("code",[t._v("OFF")])]),t._v(" "),e("td",[t._v("If "),e("code",[t._v("ON")]),t._v(", do not count oatpp objects (do not detect memory-leaks). This will increase performance. "),e("br"),t._v(" "),e("strong",[t._v("Note:")]),t._v(" DO NOT use this flags to build/run application tests, as tests won't detect memory-leaks.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("OATPP_DISABLE_POOL_ALLOCATIONS")])]),t._v(" "),e("td",[e("code",[t._v("OFF")])]),t._v(" "),e("td",[t._v("If "),e("code",[t._v("ON")]),t._v(", do not use oatpp memory-pools.")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("OATPP_COMPAT_BUILD_NO_THREAD_LOCAL")])]),t._v(" "),e("td",[e("code",[t._v("OFF")])]),t._v(" "),e("td",[t._v("Build without "),e("code",[t._v("thread_local")]),t._v(" feature. See "),e("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/81",target:"_blank",rel:"noopener noreferrer"}},[t._v("#81"),e("OutboundLink")],1),t._v(".")])])])])])}),[],!1,null,null,null);a.default=o.exports}}]);