(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{389:function(t,a,e){"use strict";e.r(a);var r=e(42),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"bodydecoder-hpp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bodydecoder-hpp"}},[t._v("#")]),t._v(" BodyDecoder.hpp"),e("seo")],1),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/oatpp/oatpp-curl/blob/master/src/oatpp-curl/io/BodyDecoder.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"https://github.com/oatpp/oatpp-curl/issues/new?title=API%20question&body=In%20file:%20oatpp-curl/io/BodyDecoder.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("code",[t._v("API: latest")]),e("br"),t._v(" "),e("code",[t._v("module: oatpp-curl")]),e("br"),t._v(" "),e("code",[t._v('#include "oatpp-curl/io/BodyDecoder.hpp"')])]),t._v(" "),e("h2",{attrs:{id:"bodydecoder"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bodydecoder"}},[t._v("#")]),t._v(" BodyDecoder")]),t._v(" "),e("p",[t._v("Custom BodyDecoder for "),e("RouterLink",{attrs:{to:"/api/latest/oatpp-curl/RequestExecutor/#requestexecutor"}},[t._v("oatpp::curl::RequestExecutor")]),t._v(". Extends "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/web/protocol/http/incoming/BodyDecoder/#bodydecoder"}},[t._v("oatpp::web::protocol::http::incoming::BodyDecoder")]),t._v(".")],1),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" curl "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" io "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BodyDecoder")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("web"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("protocol"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("http"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("incoming"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("BodyDecoder "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"typedefs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typedefs"}},[t._v("#")]),t._v(" Typedefs")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("oatpp::data::share::LazyStringMultimap<oatpp::data::share::StringKeyLabelCI>")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bodydecoder-headers"}},[t._v("Headers")])]),t._v(" "),e("td",[t._v("Typedef for headers map. Headers map key is case-insensitive. For more info see "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/share/LazyStringMap/#lazystringmultimap"}},[t._v("oatpp::data::share::LazyStringMultimap")]),t._v(".")],1)])])]),t._v(" "),e("h3",{attrs:{id:"methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("Return Type")]),t._v(" "),e("th",[t._v("Name")]),t._v(" "),e("th",[t._v("Summary")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("void")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bodydecoder-decode"}},[t._v("decode")])]),t._v(" "),e("td",[t._v("Just transfer everything we have in bodyStream to toStream as-is")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("oatpp::async::CoroutineStarter")])]),t._v(" "),e("td",[e("a",{attrs:{href:"#bodydecoder-decodeasync"}},[t._v("decodeAsync")])]),t._v(" "),e("td",[t._v("Just transfer everything we have in bodyStream to toStream as-is")])])])]),t._v(" "),e("h3",{attrs:{id:"bodydecoder-headers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bodydecoder-headers"}},[t._v("#")]),t._v(" BodyDecoder::Headers")]),t._v(" "),e("p",[t._v("Typedef for headers map. Headers map key is case-insensitive. For more info see "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/share/LazyStringMap/#lazystringmultimap"}},[t._v("oatpp::data::share::LazyStringMultimap")]),t._v(".")],1),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("share"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("LazyStringMultimap"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("share"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("StringKeyLabelCI"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Headers\n")])])]),e("h3",{attrs:{id:"bodydecoder-decode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bodydecoder-decode"}},[t._v("#")]),t._v(" BodyDecoder::decode")]),t._v(" "),e("p",[t._v("Just transfer everything we have in bodyStream to toStream as-is Curl already did all decoding. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" headers - Headers map. "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/web/protocol/http/Http/#headers"}},[t._v("oatpp::web::protocol::http::Headers")]),t._v(". ")],1),e("li",[e("strong",[t._v("@param")]),t._v(" bodyStream - pointer to "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#inputstream"}},[t._v("oatpp::data::stream::InputStream")]),t._v(". ")],1),e("li",[e("strong",[t._v("@param")]),t._v(" writeCallback - "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#writecallback"}},[t._v("oatpp::data::stream::WriteCallback")]),t._v(". ")],1),e("li",[e("strong",[t._v("@param")]),t._v(" connection ")])])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Headers"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" headers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("InputStream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" bodyStream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("WriteCallback"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" writeCallback"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("IOStream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" connection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" override\n")])])]),e("h3",{attrs:{id:"bodydecoder-decodeasync"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bodydecoder-decodeasync"}},[t._v("#")]),t._v(" BodyDecoder::decodeAsync")]),t._v(" "),e("p",[t._v("Just transfer everything we have in bodyStream to toStream as-is Curl already did all decoding. "),e("ul",[e("li",[e("strong",[t._v("@param")]),t._v(" headers - Headers map. "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/web/protocol/http/Http/#headers"}},[t._v("oatpp::web::protocol::http::Headers")]),t._v(". ")],1),e("li",[e("strong",[t._v("@param")]),t._v(" bodyStream - "),e("code",[t._v("std::shared_ptr")]),t._v(" to "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#inputstream"}},[t._v("oatpp::data::stream::InputStream")]),t._v(". ")],1),e("li",[e("strong",[t._v("@param")]),t._v(" writeCallback - "),e("code",[t._v("std::shared_ptr")]),t._v(" to "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/stream/Stream/#writecallback"}},[t._v("oatpp::data::stream::WriteCallback")]),t._v(". ")],1),e("li",[e("strong",[t._v("@param")]),t._v(" connection ")]),e("li",[e("strong",[t._v("@return")]),t._v(" - "),e("RouterLink",{attrs:{to:"/api/latest/oatpp/core/async/Coroutine/#coroutinestarter"}},[t._v("oatpp::async::CoroutineStarter")]),t._v(". ")],1)])]),t._v(" "),e("div",{staticClass:"language-cpp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-cpp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("virtual")]),t._v(" oatpp"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("async"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("CoroutineStarter "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("decodeAsync")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Headers"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" headers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                                   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("InputStream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" bodyStream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                                   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("WriteCallback"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" writeCallback"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                                   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" std"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("IOStream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" connection"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" override\n")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);