(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{618:function(t,e,a){"use strict";a.r(e);var s=a(42),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"chunked-hpp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunked-hpp"}},[t._v("#")]),t._v(" Chunked.hpp"),a("seo")],1),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/oatpp/oatpp/blob/master/src/oatpp/web/protocol/http/encoding/Chunked.hpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("This File On Github"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://github.com/oatpp/oatpp/issues/new?title=API%20question&body=In%20file:%20oatpp/web/protocol/http/encoding/Chunked.hpp%0A%0A%23%20Question%0A%0A%3Cyour-question-here%3E",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ask A Question"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("API: latest")]),a("br"),t._v(" "),a("code",[t._v("module: oatpp")]),a("br"),t._v(" "),a("code",[t._v('#include "oatpp/web/protocol/http/encoding/Chunked.hpp"')])]),t._v(" "),a("h2",{attrs:{id:"encoderchunked"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#encoderchunked"}},[t._v("#")]),t._v(" EncoderChunked")]),t._v(" "),a("p",[t._v("Chunked-encoding buffer processor. "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/buffer/Processor/#processor"}},[t._v("oatpp::data::buffer::Processor")]),t._v(".")],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" web "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" protocol "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" encoding "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EncoderChunked")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Processor "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Return Type")]),t._v(" "),a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Summary")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("v_io_size")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#encoderchunked-suggestinputstreamreadsize"}},[t._v("suggestInputStreamReadSize")])]),t._v(" "),a("td",[t._v("If the client is using the input stream to read data and push it to the processor,")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("v_int32")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#encoderchunked-iterate"}},[t._v("iterate")])]),t._v(" "),a("td",[t._v("Process data.")])])])]),t._v(" "),a("h3",{attrs:{id:"encoderchunked-suggestinputstreamreadsize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#encoderchunked-suggestinputstreamreadsize"}},[t._v("#")]),t._v(" EncoderChunked::suggestInputStreamReadSize")]),t._v(" "),a("p",[t._v("If the client is using the input stream to read data and push it to the processor, the client MAY ask the processor for a suggested read size. "),a("ul",[a("li",[a("strong",[t._v("@return")]),t._v(" - suggested read size. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_io_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("suggestInputStreamReadSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h3",{attrs:{id:"encoderchunked-iterate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#encoderchunked-iterate"}},[t._v("#")]),t._v(" EncoderChunked::iterate")]),t._v(" "),a("p",[t._v("Process data. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" dataIn - data provided by client to processor. Input data. data::buffer::InlineReadData. Set "),a("code",[t._v("dataIn")]),t._v(" buffer pointer to "),a("code",[t._v("nullptr")]),t._v(" to designate the end of input. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" dataOut - data provided to client by processor. Output data. data::buffer::InlineReadData. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("a",{attrs:{href:"#processor-error"}},[t._v("Processor::Error")]),t._v(". ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("InlineReadData"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" dataIn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("InlineReadData"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" dataOut"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h2",{attrs:{id:"decoderchunked"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decoderchunked"}},[t._v("#")]),t._v(" DecoderChunked")]),t._v(" "),a("p",[t._v("Chunked-decoding buffer processor. "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/buffer/Processor/#processor"}},[t._v("oatpp::data::buffer::Processor")]),t._v(".")],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" web "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" protocol "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" encoding "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DecoderChunked")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Processor "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"methods-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods-2"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Return Type")]),t._v(" "),a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Summary")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("[none]")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#decoderchunked-decoderchunked"}},[t._v("DecoderChunked")])]),t._v(" "),a("td",[t._v("Constructor.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("v_io_size")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#decoderchunked-suggestinputstreamreadsize"}},[t._v("suggestInputStreamReadSize")])]),t._v(" "),a("td",[t._v("If the client is using the input stream to read data and push it to the processor,")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("v_int32")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#decoderchunked-iterate"}},[t._v("iterate")])]),t._v(" "),a("td",[t._v("Process data.")])])])]),t._v(" "),a("h3",{attrs:{id:"decoderchunked-decoderchunked"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decoderchunked-decoderchunked"}},[t._v("#")]),t._v(" DecoderChunked::DecoderChunked")]),t._v(" "),a("p",[t._v("Constructor.")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("DecoderChunked")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"decoderchunked-suggestinputstreamreadsize"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decoderchunked-suggestinputstreamreadsize"}},[t._v("#")]),t._v(" DecoderChunked::suggestInputStreamReadSize")]),t._v(" "),a("p",[t._v("If the client is using the input stream to read data and push it to the processor, the client MAY ask the processor for a suggested read size. "),a("ul",[a("li",[a("strong",[t._v("@return")]),t._v(" - suggested read size. ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_io_size "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("suggestInputStreamReadSize")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h3",{attrs:{id:"decoderchunked-iterate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#decoderchunked-iterate"}},[t._v("#")]),t._v(" DecoderChunked::iterate")]),t._v(" "),a("p",[t._v("Process data. "),a("ul",[a("li",[a("strong",[t._v("@param")]),t._v(" dataIn - data provided by client to processor. Input data. data::buffer::InlineReadData. Set "),a("code",[t._v("dataIn")]),t._v(" buffer pointer to "),a("code",[t._v("nullptr")]),t._v(" to designate the end of input. ")]),a("li",[a("strong",[t._v("@param")]),t._v(" dataOut - data provided to client by processor. Output data. data::buffer::InlineReadData. ")]),a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("a",{attrs:{href:"#processor-error"}},[t._v("Processor::Error")]),t._v(". ")])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("v_int32 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("iterate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("InlineReadData"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" dataIn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("InlineReadData"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" dataOut"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h2",{attrs:{id:"chunkedencoderprovider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedencoderprovider"}},[t._v("#")]),t._v(" ChunkedEncoderProvider")]),t._v(" "),a("p",[t._v('EncoderProvider for "chunked" encoding.')]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" web "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" protocol "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" encoding "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChunkedEncoderProvider")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" EncoderProvider "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"methods-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods-3"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Return Type")]),t._v(" "),a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Summary")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("oatpp::String")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedencoderprovider-getencodingname"}},[t._v("getEncodingName")])]),t._v(" "),a("td",[t._v("Get encoding name.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("std::shared_ptr<data::buffer::Processor>")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkedencoderprovider-getprocessor"}},[t._v("getProcessor")])]),t._v(" "),a("td",[t._v("Get "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/buffer/Processor/#processor"}},[t._v("oatpp::data::buffer::Processor")]),t._v(" for chunked encoding.")],1)])])]),t._v(" "),a("h3",{attrs:{id:"chunkedencoderprovider-getencodingname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedencoderprovider-getencodingname"}},[t._v("#")]),t._v(" ChunkedEncoderProvider::getEncodingName")]),t._v(" "),a("p",[t._v("Get encoding name. "),a("ul",[a("li",[a("strong",[t._v("@return")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEncodingName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h3",{attrs:{id:"chunkedencoderprovider-getprocessor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkedencoderprovider-getprocessor"}},[t._v("#")]),t._v(" ChunkedEncoderProvider::getProcessor")]),t._v(" "),a("p",[t._v("Get "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/buffer/Processor/#processor"}},[t._v("oatpp::data::buffer::Processor")]),t._v(" for chunked encoding. "),a("ul",[a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/buffer/Processor/#processor"}},[t._v("oatpp::data::buffer::Processor")])],1)])],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Processor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h2",{attrs:{id:"chunkeddecoderprovider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkeddecoderprovider"}},[t._v("#")]),t._v(" ChunkedDecoderProvider")]),t._v(" "),a("p",[t._v('EncoderProvider for "chunked" decoding.')]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" oatpp "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" web "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" protocol "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("namespace")]),t._v(" encoding "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ChunkedDecoderProvider")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" EncoderProvider "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"methods-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods-4"}},[t._v("#")]),t._v(" Methods")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Return Type")]),t._v(" "),a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Summary")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("oatpp::String")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkeddecoderprovider-getencodingname"}},[t._v("getEncodingName")])]),t._v(" "),a("td",[t._v("Get encoding name.")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("std::shared_ptr<data::buffer::Processor>")])]),t._v(" "),a("td",[a("a",{attrs:{href:"#chunkeddecoderprovider-getprocessor"}},[t._v("getProcessor")])]),t._v(" "),a("td",[t._v("Get "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/buffer/Processor/#processor"}},[t._v("oatpp::data::buffer::Processor")]),t._v(" for chunked decoding.")],1)])])]),t._v(" "),a("h3",{attrs:{id:"chunkeddecoderprovider-getencodingname"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkeddecoderprovider-getencodingname"}},[t._v("#")]),t._v(" ChunkedDecoderProvider::getEncodingName")]),t._v(" "),a("p",[t._v("Get encoding name. "),a("ul",[a("li",[a("strong",[t._v("@return")])])])]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("oatpp"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("String "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEncodingName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])]),a("h3",{attrs:{id:"chunkeddecoderprovider-getprocessor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chunkeddecoderprovider-getprocessor"}},[t._v("#")]),t._v(" ChunkedDecoderProvider::getProcessor")]),t._v(" "),a("p",[t._v("Get "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/buffer/Processor/#processor"}},[t._v("oatpp::data::buffer::Processor")]),t._v(" for chunked decoding. "),a("ul",[a("li",[a("strong",[t._v("@return")]),t._v(" - "),a("RouterLink",{attrs:{to:"/api/latest/oatpp/core/data/buffer/Processor/#processor"}},[t._v("oatpp::data::buffer::Processor")])],1)])],1),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[t._v("std"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("shared_ptr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("Processor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProcessor")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" override\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);